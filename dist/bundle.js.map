{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack:///./src/background.ts","webpack:///./src/characters/turtle.ts","webpack:///./src/constants/angles.ts","webpack:///./src/controls/controls.ts","webpack:///./src/controls/keyboard.ts","webpack:///./src/controls/onscreen.ts","webpack:///./src/controls/touchpad.ts","webpack:///./src/dialog/dialog.ts","webpack:///./src/dialog/enums/dialog-type.ts","webpack:///./src/levels/level-selector.ts","webpack:///./src/levels/level.ts","webpack:///./src/levels/level1.ts","webpack:///./src/levels/level2.ts","webpack:///./src/levels/levels.ts","webpack:///./src/main.ts","webpack:///./src/turtle-observer.ts","webpack:///webpack/bootstrap","webpack:///webpack/startup"],"sourcesContent":["import Turtle from \"./characters/turtle\";\r\nimport Level from \"./levels/level\";\r\n\r\ninterface Options {\r\n  canvas: HTMLCanvasElement;\r\n  context: CanvasRenderingContext2D;\r\n  mainCharacter: Turtle;\r\n  level: Level;\r\n}\r\n\r\nfunction paintBackground(options: Options): Promise<HTMLImageElement> {\r\n  return new Promise((resolve, reject) => {\r\n    const backgroundImage = document.createElement(\"img\");\r\n    backgroundImage.src = options.level.getBgImg();\r\n    const horizontalSegments = calculateScreenCutOffPoints(\r\n      backgroundImage.width,\r\n      options.canvas.width\r\n    );\r\n    const verticalSegments = calculateScreenCutOffPoints(\r\n      backgroundImage.height,\r\n      options.canvas.height\r\n    );\r\n    const x =\r\n      options.mainCharacter.getX() < options.canvas.width\r\n        ? 0\r\n        : horizontalSegments[\r\n            Math.floor(backgroundImage.width / options.mainCharacter.getX()) - 1\r\n          ];\r\n    const y =\r\n      options.mainCharacter.getY() < options.canvas.height\r\n        ? 0\r\n        : verticalSegments[\r\n            Math.floor(backgroundImage.height / options.mainCharacter.getY()) -\r\n              1\r\n          ];\r\n    backgroundImage.onload = () => {\r\n      options.context.drawImage(\r\n        backgroundImage,\r\n        x,\r\n        y,\r\n        options.canvas.width,\r\n        options.canvas.height,\r\n        0,\r\n        0,\r\n        options.canvas.width,\r\n        options.canvas.height\r\n      );\r\n      resolve(backgroundImage);\r\n    };\r\n    backgroundImage.onerror = () => reject(new Error(\"Could not load level background\"));\r\n  });\r\n}\r\n\r\nfunction calculateScreenCutOffPoints(\r\n  bgSize: number,\r\n  canvasSize: number\r\n): Array<number> {\r\n  const points = [];\r\n  const noOfFits = Math.floor(bgSize / canvasSize);\r\n  for (let i = 1; i < noOfFits; i++) {\r\n    points.push(i * canvasSize);\r\n  }\r\n  points.push(bgSize - noOfFits * canvasSize);\r\n  return points;\r\n}\r\n\r\nexport default paintBackground;\r\n","import angles from \"../constants/angles\";\r\nimport Character from \"./character\";\r\n\r\nclass Turtle implements Character {\r\n  private x: number;\r\n  private y: number;\r\n  private angle: number;\r\n\r\n  private bgStartX: number;\r\n  private bgStartY: number;\r\n  private limitY: number;\r\n  private static step: number = 3;\r\n\r\n  constructor() {\r\n    this.resetPosition();\r\n    this.angle = angles.right;\r\n    this.setBgStart(0, 0);\r\n  }\r\n\r\n  getX = () => this.x;\r\n  getY = () => this.y;\r\n\r\n  resetPosition() {\r\n    this.x = 50;\r\n    this.y = 10;\r\n  }\r\n\r\n  setBgStart(x: number, y: number) {\r\n    this.bgStartX = x;\r\n    this.bgStartY = y;\r\n  }\r\n\r\n  setYLimit(y: number) {\r\n    this.limitY = y;\r\n  }\r\n\r\n  moveUp() {\r\n    this.rotate(angles.up);\r\n    if (this.y > 0) {\r\n      this.y -= Turtle.step;\r\n    }\r\n  }\r\n\r\n  moveDown() {\r\n    this.rotate(angles.down);\r\n    if (this.y < this.limitY) {\r\n      this.y += Turtle.step;\r\n    }\r\n  }\r\n\r\n  moveLeft() {\r\n    this.rotate(angles.left);\r\n    if (this.x > 0) {\r\n      this.x -= Turtle.step;\r\n    }\r\n  }\r\n\r\n  moveRight() {\r\n    this.rotate(angles.right);\r\n    this.x += Turtle.step;\r\n  }\r\n\r\n  private rotate(angle: number) {\r\n    this.angle = angle;\r\n  }\r\n\r\n  private applyRotation(context: CanvasRenderingContext2D) {\r\n    context.translate(this.x, this.y);\r\n    context.rotate(this.angle);\r\n    context.translate(-this.x, -this.y);\r\n  }\r\n\r\n  paint(context: CanvasRenderingContext2D) {\r\n    const turtleImage = document.createElement(\"img\");\r\n    turtleImage.src = \"./images/turtle.png\";\r\n    turtleImage.onload = () => {\r\n      this.applyRotation(context);\r\n      context.drawImage(\r\n        turtleImage,\r\n        this.x - this.bgStartX,\r\n        this.y - this.bgStartY,\r\n        turtleImage.width / 4,\r\n        turtleImage.height / 4\r\n      );\r\n      context.resetTransform();\r\n    };\r\n  }\r\n}\r\n\r\nexport default Turtle;\r\n","const angles = {\r\n  up: 0,\r\n  right: Math.PI / 2,\r\n  down: Math.PI,\r\n  left: Math.PI + Math.PI / 2,\r\n};\r\n\r\nexport default angles;\r\n","import Turtle from \"../characters/turtle\";\r\nimport bindKeyboard from \"./keyboard\";\r\nimport bindOnscreenControls from \"./onscreen\";\r\nimport bindWheel from \"./touchpad\";\r\n\r\ninterface Options {\r\n  canvas: HTMLCanvasElement;\r\n  mainCharacter: Turtle;\r\n  upBtnId: string;\r\n  leftBtnId: string;\r\n  rightBtnId: string;\r\n  downBtnId: string;\r\n}\r\n\r\nfunction bindControls(options: Options) {\r\n  const {\r\n    canvas,\r\n    mainCharacter,\r\n    upBtnId,\r\n    leftBtnId,\r\n    rightBtnId,\r\n    downBtnId,\r\n  } = options;\r\n  bindKeyboard(canvas, mainCharacter);\r\n  bindWheel(canvas, mainCharacter);\r\n  bindOnscreenControls(mainCharacter, {\r\n    upBtnId,\r\n    leftBtnId,\r\n    rightBtnId,\r\n    downBtnId,\r\n  });\r\n}\r\n\r\nexport default bindControls;\r\n","import Turtle from \"../characters/turtle\";\r\n\r\nfunction handleKeyDown(event: KeyboardEvent, mainCharacter: Turtle) {\r\n  const upKeys = [\"w\", \"W\", \"ArrowUp\"];\r\n  const downKeys = [\"s\", \"S\", \"ArrowDown\"];\r\n  const leftKeys = [\"a\", \"A\", \"ArrowLeft\"];\r\n  const rightKeys = [\"d\", \"D\", \"ArrowRight\"];\r\n\r\n  if (upKeys.includes(event.key)) {\r\n    mainCharacter.moveUp();\r\n  }\r\n\r\n  if (downKeys.includes(event.key)) {\r\n    mainCharacter.moveDown();\r\n  }\r\n\r\n  if (leftKeys.includes(event.key)) {\r\n    mainCharacter.moveLeft();\r\n  }\r\n\r\n  if (rightKeys.includes(event.key)) {\r\n    mainCharacter.moveRight();\r\n  }\r\n}\r\n\r\nfunction bindKeyboard(canvas: HTMLCanvasElement, mainCharacter: Turtle) {\r\n  canvas.addEventListener(\"keydown\", (event) =>\r\n    handleKeyDown(event, mainCharacter)\r\n  );\r\n}\r\n\r\nexport default bindKeyboard;\r\n","import Turtle from \"../characters/turtle\";\r\n\r\ninterface Options {\r\n  upBtnId: string;\r\n  leftBtnId: string;\r\n  rightBtnId: string;\r\n  downBtnId: string;\r\n}\r\n\r\nlet timer = 0;\r\n\r\nfunction mousedown(mainCharacter: Turtle, callback: Function) {\r\n    callback();\r\n    timer = requestAnimationFrame(() => mousedown(mainCharacter, callback));\r\n}\r\n\r\nfunction mouseup() {\r\n  cancelAnimationFrame(timer);\r\n}\r\n\r\nfunction bindOnscreenControls(mainCharacter: Turtle, options: Options) {\r\n  const upBtn = document.getElementById(options.upBtnId) as HTMLButtonElement;\r\n  const leftBtn = document.getElementById(options.leftBtnId) as HTMLButtonElement;\r\n  const rightBtn = document.getElementById(options.rightBtnId) as HTMLButtonElement;\r\n  const downBtn = document.getElementById(options.downBtnId) as HTMLButtonElement;\r\n\r\n  bindControl(mainCharacter, upBtn, () => mainCharacter.moveUp());\r\n  bindControl(mainCharacter, leftBtn, () => mainCharacter.moveLeft());\r\n  bindControl(mainCharacter, rightBtn, () => mainCharacter.moveRight());\r\n  bindControl(mainCharacter, downBtn, () => mainCharacter.moveDown());\r\n}\r\n\r\nfunction bindControl(mainCharacter: Turtle, btn: HTMLButtonElement, callback: Function) {\r\n  btn.addEventListener(\"mousedown\", () => mousedown(mainCharacter, callback));\r\n  btn.addEventListener(\"mouseup\", mouseup);\r\n  btn.addEventListener(\"mouseleave\", mouseup);\r\n  btn.addEventListener(\"touchstart\", () => mousedown(mainCharacter, callback));\r\n  btn.addEventListener(\"touchend\", mouseup);\r\n}\r\n\r\nexport default bindOnscreenControls;\r\n","import Turtle from \"../characters/turtle\";\r\n\r\nfunction handleWheel(event: WheelEvent, mainCharacter: Turtle) {\r\n  event.preventDefault();\r\n  if (event.deltaX < 0) {\r\n    mainCharacter.moveLeft();\r\n  }\r\n  if (event.deltaX > 0) {\r\n    mainCharacter.moveRight();\r\n  }\r\n  if (event.deltaY < 0) {\r\n    mainCharacter.moveUp();\r\n  }\r\n  if (event.deltaY > 0) {\r\n    mainCharacter.moveDown();\r\n  }\r\n}\r\n\r\nfunction bindWheel(canvas: HTMLCanvasElement, mainCharacter: Turtle) {\r\n  canvas.addEventListener(\"wheel\", (event) =>\r\n    handleWheel(event, mainCharacter)\r\n  );\r\n}\r\n\r\nexport default bindWheel;\r\n","import ConfirmationDialogOptions from \"./options/confirmation-dialog-options\";\r\nimport CreditsDialogOptions from \"./options/credits-dialog-options\";\r\nimport DialogOptions from \"./options/dialog-options\";\r\nimport { DialogType } from \"./enums/dialog-type\";\r\nimport MenuDialogOptions from \"./options/menu-dialog-options\";\r\nimport PromptDialogOptions from \"./options/prompt-dialog-options\";\r\nimport PromptInput, { PromptSelect } from \"./options/prompt-input\";\r\nimport ChangelogDialogOptions from \"./options/changelog-dialog-options\";\r\n\r\nexport default class Dialog {\r\n  private static modal(type: DialogType, options: DialogOptions) {\r\n    if (!document.getElementById(options.id)) {\r\n      const modal = document.createElement(\"div\");\r\n      modal.tabIndex = 1;\r\n      modal.id = options.id;\r\n      modal.classList.add(\r\n        \"dialog\",\r\n        \"fixed\",\r\n        \"text-white\",\r\n        \"w-4/5\",\r\n        \"opacity-80\",\r\n        \"focus:opacity-95\",\r\n        \"bg-amber-500\",\r\n        \"dark:bg-gray-900\",\r\n        \"pt-5\",\r\n        \"pb-5\",\r\n        \"rounded-3xl\",\r\n        \"max-w-xl\"\r\n      );\r\n\r\n      if (options.title) {\r\n        const h1 = document.createElement(\"h1\");\r\n        h1.innerText = options.title;\r\n        h1.classList.add(\"text-center\", \"text-xl\");\r\n        modal.appendChild(h1);\r\n        modal.appendChild(document.createElement(\"hr\"));\r\n      }\r\n\r\n      const textContainer = document.createElement(\"div\");\r\n      this.appendText(options.text, textContainer);\r\n      modal.appendChild(textContainer);\r\n\r\n      switch (type) {\r\n        case DialogType.Confirmation: {\r\n          const o = options as ConfirmationDialogOptions;\r\n          const btnContainer = document.createElement(\"div\");\r\n          btnContainer.classList.add(\"w-fit\", \"m-auto\");\r\n          modal.appendChild(btnContainer);\r\n\r\n          this.appendBtn(\r\n            btnContainer,\r\n            \"Yes\",\r\n            () => {\r\n              o.yesCallback();\r\n              this.closeModal(modal);\r\n            },\r\n            false,\r\n            \"button\"\r\n          );\r\n          this.appendBtn(\r\n            btnContainer,\r\n            \"No\",\r\n            () => {\r\n              o.noCallback();\r\n              this.closeModal(modal);\r\n            },\r\n            true,\r\n            \"button\"\r\n          );\r\n          break;\r\n        }\r\n        case DialogType.Notification: {\r\n          this.appendOKButton(modal);\r\n          this.listenKeyboard(modal);\r\n          break;\r\n        }\r\n        case DialogType.Prompt: {\r\n          const o = options as PromptDialogOptions;\r\n          this.appendForm(modal, o);\r\n          break;\r\n        }\r\n        case DialogType.Credits: {\r\n          const o = options as CreditsDialogOptions;\r\n          this.appendCredits(textContainer, o);\r\n          this.appendOKButton(modal);\r\n          this.listenKeyboard(modal);\r\n          break;\r\n        }\r\n        case DialogType.Menu: {\r\n          const o = options as MenuDialogOptions;\r\n          this.appendMenu(modal, o);\r\n          this.appendOKButton(modal);\r\n          this.listenKeyboard(modal);\r\n          break;\r\n        }\r\n        case DialogType.Changelog: {\r\n          const o = options as ChangelogDialogOptions;\r\n          this.appendChangelog(modal, o);\r\n          this.appendOKButton(modal);\r\n          this.listenKeyboard(modal);\r\n          break;\r\n        }\r\n      }\r\n\r\n      document.body.appendChild(modal);\r\n    }\r\n  }\r\n\r\n  private static appendBtn(\r\n    container: HTMLDivElement | HTMLFormElement,\r\n    text: string,\r\n    callback: any,\r\n    isDanger: boolean,\r\n    btnType: \"submit\" | \"button\" | \"reset\"\r\n  ) {\r\n    const btn = document.createElement(\"button\");\r\n    btn.type = btnType;\r\n    btn.classList.add(\"rounded-3xl\", \"m-1\", \"cursor-pointer\");\r\n    this.assignButtonColor(btn, isDanger);\r\n    const span = document.createElement(\"span\");\r\n    span.classList.add(\"text-xl\", \"ml-2\", \"mr-2\");\r\n    span.innerText = text;\r\n    btn.appendChild(span);\r\n    if (btnType === \"button\") {\r\n      btn.addEventListener(\"click\", callback);\r\n    }\r\n    container.appendChild(btn);\r\n  }\r\n\r\n  private static appendForm(\r\n    modal: HTMLDivElement,\r\n    options: PromptDialogOptions\r\n  ) {\r\n    const inputContainer = document.createElement(\"div\") as HTMLDivElement;\r\n    inputContainer.classList.add(\"m-auto\", \"w-3/4\");\r\n    modal.appendChild(inputContainer);\r\n\r\n    const form = document.createElement(\"form\") as HTMLFormElement;\r\n    inputContainer.appendChild(form);\r\n    form.addEventListener(\"submit\", (event: SubmitEvent) => {\r\n      event.preventDefault();\r\n      if (options.onOK) {\r\n        options.onOK();\r\n      }\r\n      this.closeModal(modal);\r\n    });\r\n\r\n    this.appendInputs(form, options.inputs);\r\n    this.appendSelects(form, options.selects);\r\n\r\n    const btnContainer = document.createElement(\"div\") as HTMLDivElement;\r\n    btnContainer.classList.add(\"w-fit\", \"m-auto\");\r\n    form.appendChild(btnContainer);\r\n\r\n    this.appendBtn(btnContainer, \"OK\", null, false, \"submit\");\r\n    this.appendBtn(\r\n      btnContainer,\r\n      \"Cancel\",\r\n      () => {\r\n        if (options.onCancel) {\r\n          options.onCancel();\r\n        }\r\n        this.closeModal(modal);\r\n      },\r\n      true,\r\n      \"button\"\r\n    );\r\n  }\r\n\r\n  private static appendInputs(\r\n    form: HTMLFormElement,\r\n    inputs: Array<PromptInput>\r\n  ) {\r\n    for (const i of inputs) {\r\n      const input = document.createElement(\"input\");\r\n      input.type = i.type;\r\n      input.id = `dialog-input-${i.name}`;\r\n      input.name = `dialog-input-${i.name}`;\r\n      input.ariaPlaceholder = `Enter ${i.label}`;\r\n      input.placeholder = `Enter ${i.label}`;\r\n      input.maxLength = i.limit;\r\n      this.assignInputClassNames(input);\r\n      input.required = i.required;\r\n      input.ariaRequired = i.required.toString();\r\n      form.appendChild(input);\r\n\r\n      this.appendBrElement(form);\r\n      this.appendBrElement(form);\r\n    }\r\n  }\r\n\r\n  private static assignInputClassNames(input: HTMLElement) {\r\n    input.classList.add(\r\n      \"text-center\",\r\n      \"w-full\",\r\n      \"rounded-3xl\",\r\n      \"h-9\",\r\n      \"text-lg\",\r\n      \"text-gray-700\"\r\n    );\r\n  }\r\n\r\n  private static appendSelects(\r\n    form: HTMLFormElement,\r\n    selects: Array<PromptSelect>\r\n  ) {\r\n    for (const s of selects) {\r\n      const select = document.createElement(\"select\");\r\n      select.id = `dialog-select-${s.name}`;\r\n      select.name = `dialog-select-${s.name}`;\r\n      select.ariaPlaceholder = s.label;\r\n      this.assignInputClassNames(select);\r\n      select.required = s.required;\r\n      select.ariaRequired = s.required.toString();\r\n      form.appendChild(select);\r\n\r\n      for (const o of s.options) {\r\n        const option = document.createElement(\"option\");\r\n        option.innerText = o.text;\r\n        option.value = o.value;\r\n        if (s.default === parseInt(o.value)) {\r\n          option.selected = true;\r\n          option.ariaSelected = \"true\";\r\n        }\r\n        select.appendChild(option);\r\n      }\r\n\r\n      const handleChange = s.onChange;\r\n      if (handleChange) {\r\n        handleChange(select.selectedOptions[0].value);\r\n        select.addEventListener(\"change\", () =>\r\n          handleChange(select.selectedOptions[0].value)\r\n        );\r\n      }\r\n\r\n      this.appendBrElement(form);\r\n      this.appendBrElement(form);\r\n    }\r\n  }\r\n\r\n  private static appendBrElement(container: HTMLDivElement | HTMLFormElement) {\r\n    const br = document.createElement(\"br\");\r\n    container.appendChild(br);\r\n  }\r\n\r\n  private static appendText(\r\n    text: Array<string> | undefined,\r\n    container: HTMLDivElement\r\n  ) {\r\n    this.assignTextClassNames(container);\r\n    if (text) {\r\n      for (const t of text) {\r\n        const p = document.createElement(\"p\");\r\n        p.innerText = t;\r\n        container.appendChild(p);\r\n      }\r\n    }\r\n  }\r\n\r\n  private static appendCredits(\r\n    container: HTMLDivElement,\r\n    options: CreditsDialogOptions\r\n  ) {\r\n    for (const section of options.sections) {\r\n      const h2 = document.createElement(\"h2\");\r\n      h2.classList.add(\"text-xl\");\r\n      h2.innerText = section.title;\r\n      container.appendChild(h2);\r\n      const ul = document.createElement(\"ul\");\r\n      ul.classList.add(\"ml-5\");\r\n      for (const contributor of section.contributors) {\r\n        const li = document.createElement(\"li\");\r\n        li.innerText = contributor;\r\n        ul.appendChild(li);\r\n      }\r\n      container.appendChild(ul);\r\n    }\r\n  }\r\n\r\n  private static appendOKButton(modal: HTMLDivElement) {\r\n    const btnContainer = document.createElement(\"div\") as HTMLDivElement;\r\n    btnContainer.classList.add(\"w-fit\", \"m-auto\");\r\n    modal.appendChild(btnContainer);\r\n\r\n    this.appendBtn(\r\n      btnContainer,\r\n      \"OK\",\r\n      () => this.closeModal(modal),\r\n      false,\r\n      \"button\"\r\n    );\r\n  }\r\n\r\n  private static listenKeyboard(modal: HTMLDivElement) {\r\n    modal.addEventListener(\"keydown\", (event: KeyboardEvent) => {\r\n      if (event.key === \"Escape\" || event.key === \"Enter\") {\r\n        this.closeModal(modal);\r\n      }\r\n    });\r\n  }\r\n\r\n  private static appendMenu(modal: HTMLDivElement, options: MenuDialogOptions) {\r\n    const container = document.createElement(\"div\");\r\n    container.classList.add(\"w-1/3\", \"m-auto\");\r\n    modal.appendChild(container);\r\n    for (const b of options.buttons) {\r\n      const button = document.createElement(\"button\");\r\n      button.type = \"button\";\r\n      button.innerText = b.text;\r\n      button.classList.add(\"w-full\", \"h-12\", \"rounded-3xl\", \"mt-3\", \"mb-3\");\r\n      this.assignButtonColor(button, b.isDanger);\r\n      button.addEventListener(\"click\", b.callback);\r\n      container.appendChild(button);\r\n    }\r\n  }\r\n\r\n  private static appendChangelog(\r\n    modal: HTMLDivElement,\r\n    options: ChangelogDialogOptions\r\n  ) {\r\n    const container = document.createElement(\"div\");\r\n    this.assignTextClassNames(container);\r\n    modal.appendChild(container);\r\n    for (const release of options.releases) {\r\n      const h2 = document.createElement(\"h2\");\r\n      h2.classList.add(\"text-xl\");\r\n      h2.innerText = `${release.version} (${release.status} release - ${release.dateTime})`;\r\n      container.appendChild(h2);\r\n      const ul = document.createElement(\"ul\");\r\n      ul.classList.add(\"ml-5\");\r\n      container.appendChild(ul);\r\n      for (const point of release.points) {\r\n        const outerLi = document.createElement(\"li\");\r\n        outerLi.innerText = point.text;\r\n        ul.appendChild(outerLi);\r\n        if (point.subPoints && point.subPoints.length > 0) {\r\n          const ol = document.createElement(\"ol\");\r\n          ol.classList.add(\"list-decimal\", \"ml-5\");\r\n          outerLi.appendChild(ol);\r\n          for (const subPoint of point.subPoints) {\r\n            const innerLi = document.createElement(\"li\");\r\n            innerLi.innerText = subPoint;\r\n            ol.appendChild(innerLi);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private static assignTextClassNames(container: HTMLDivElement) {\r\n    container.classList.add(\r\n      \"w-11/12\",\r\n      \"m-auto\",\r\n      \"mt-3\",\r\n      \"mb-3\",\r\n      \"grid\",\r\n      \"gap-3\",\r\n      \"max-h-screen-1/4\",\r\n      \"overflow-y-auto\"\r\n    );\r\n  }\r\n\r\n  private static assignButtonColor(\r\n    button: HTMLButtonElement,\r\n    isDanger: boolean\r\n  ) {\r\n    if (isDanger) {\r\n      button.classList.add(\"bg-red-600\");\r\n    } else {\r\n      button.classList.add(\"bg-theme-color\", \"dark:bg-dark-theme-color\");\r\n    }\r\n  }\r\n\r\n  private static closeModal(modal: HTMLDivElement) {\r\n    if (document.body.contains(modal)) {\r\n      document.body.removeChild(modal);\r\n    }\r\n  }\r\n\r\n  public static confirm = (options: ConfirmationDialogOptions) =>\r\n    Dialog.modal(DialogType.Confirmation, options);\r\n  public static notify = (options: DialogOptions) =>\r\n    Dialog.modal(DialogType.Notification, options);\r\n  public static prompt = (options: PromptDialogOptions) =>\r\n    Dialog.modal(DialogType.Prompt, options);\r\n  public static credit = (options: CreditsDialogOptions) =>\r\n    Dialog.modal(DialogType.Credits, options);\r\n  public static menu = (options: MenuDialogOptions) =>\r\n    Dialog.modal(DialogType.Menu, options);\r\n  public static changelog = (options: ChangelogDialogOptions) =>\r\n    Dialog.modal(DialogType.Changelog, options);\r\n\r\n  public static closeAllOpenDialogs() {\r\n    const dialogs = document.getElementsByClassName(\r\n      \"dialog\"\r\n    ) as HTMLCollectionOf<HTMLDivElement>;\r\n    for (let i: number = 0; i < dialogs.length; i++) {\r\n      this.closeModal(dialogs[i]);\r\n    }\r\n  }\r\n}\r\n","export enum DialogType {\r\n  Confirmation = 0,\r\n  Notification = 1,\r\n  Prompt = 2,\r\n  Credits = 3,\r\n  Menu = 4,\r\n  Changelog = 5,\r\n}\r\n","import Level from \"./level\";\r\nimport levels from \"./levels\";\r\n\r\nfunction selectLvl(currentLevel: number): Level | true {\r\n  if (currentLevel <= levels.length) {\r\n    return levels[currentLevel - 1];\r\n  } else {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport default selectLvl;\r\n","import Level1 from \"./level1\";\r\n\r\nabstract class Level {\r\n  protected abstract backgroundImage: string;\r\n\r\n  getBgImg = () => this.backgroundImage;\r\n}\r\n\r\nexport default Level;\r\n","import Level from \"./level\";\r\n\r\nclass Level1 extends Level {\r\n  protected backgroundImage: string = \"./images/bg-lvl1.png\";\r\n}\r\n\r\nexport default Level1;\r\n","import Level from \"./level\";\r\n\r\nclass Level2 extends Level {\r\n  protected backgroundImage: string = \"./images/bg-demo-black.png\";\r\n}\r\n\r\nexport default Level2;\r\n","import Level1 from \"./level1\";\r\nimport Level2 from \"./level2\";\r\n\r\nconst levels = [new Level1(), new Level2()];\r\n\r\nexport default levels;\r\n","import Turtle from \"./characters/turtle\";\r\nimport { version } from \"../package.json\";\r\nimport bindControls from \"./controls/controls\";\r\nimport paintBackground from \"./background\";\r\nimport checkTurtle from \"./turtle-observer\";\r\nimport selectLvl from \"./levels/level-selector\";\r\nimport Dialog from \"./dialog/dialog\";\r\n\r\nconst canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\r\nconst context = canvas.getContext(\"2d\");\r\nconst turtle = new Turtle();\r\n\r\nlet currentLevel: number = 1;\r\n\r\nbindControls({\r\n  canvas,\r\n  mainCharacter: turtle,\r\n  upBtnId: \"upBtn\",\r\n  leftBtnId: \"leftBtn\",\r\n  rightBtnId: \"rightBtn\",\r\n  downBtnId: \"downBtn\",\r\n});\r\n\r\nasync function render() {\r\n  const level = selectLvl(currentLevel);\r\n\r\n  if (level === true) {\r\n    Dialog.notify({\r\n      id: \"game-over-dialog\",\r\n      title: \"Game complete\",\r\n      text: [\"Game complete. Congratulations!\"],\r\n    });\r\n  } else {\r\n    try {\r\n      const background = await paintBackground({\r\n        canvas,\r\n        context,\r\n        mainCharacter: turtle,\r\n        level,\r\n      });\r\n      turtle.setYLimit(background.height);\r\n      turtle.paint(context);\r\n      currentLevel = checkTurtle(turtle, {\r\n        bgWidth: background.width,\r\n        currentLvl: currentLevel,\r\n      });\r\n      requestAnimationFrame(render);\r\n    } catch (error) {\r\n      Dialog.notify({\r\n        id: \"game-error\",\r\n        title: \"Error\",\r\n        text: [error],\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nfunction resizeCanvas() {\r\n  canvas.height = window.innerHeight;\r\n  canvas.width = window.innerWidth;\r\n}\r\n\r\nfunction detectOrientation() {\r\n  if (screen.orientation.type.startsWith(\"portrait\")) {\r\n    Dialog.notify({\r\n      id: \"orientation-msg\",\r\n      title: \"Device settings\",\r\n      text: [\"Please make sure that you hold your device in landscape mode for the best game experience.\"]\r\n    });\r\n  }\r\n}\r\n\r\nwindow.addEventListener(\"resize\", resizeCanvas);\r\nwindow.addEventListener(\"orientationchange\", detectOrientation);\r\nresizeCanvas();\r\ndetectOrientation();\r\n\r\nconst versionAnchor = document.getElementById(\"version\");\r\nversionAnchor.innerText = version;\r\n\r\ncanvas.focus();\r\nrender();\r\n\r\nDialog.notify({\r\n  id: \"dialog-game-welcome\",\r\n  title: \"Welcome\",\r\n  text: [\"Welcome to Turtle Escape!\"],\r\n});\r\n","import Turtle from \"./characters/turtle\";\r\nimport Dialog from \"./dialog/dialog\";\r\nimport levels from \"./levels/levels\";\r\n\r\ninterface Options {\r\n  bgWidth: number;\r\n  currentLvl: number;\r\n}\r\n\r\nfunction checkTurtle(mainCharacter: Turtle, options: Options): number {\r\n  if (mainCharacter.getX() >= options.bgWidth) {\r\n    options.currentLvl++;\r\n    mainCharacter.resetPosition();\r\n    if (options.currentLvl <= levels.length) {\r\n      Dialog.notify({\r\n        id: \"new-level\",\r\n        title: \"New Level\",\r\n        text: [`Welcome to level ${options.currentLvl}`],\r\n      });\r\n    }\r\n  }\r\n  return options.currentLvl;\r\n}\r\n\r\nexport default checkTurtle;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(519);\n"],"names":["calculateScreenCutOffPoints","bgSize","canvasSize","points","noOfFits","Math","floor","i","push","options","Promise","resolve","reject","backgroundImage","document","createElement","src","level","getBgImg","horizontalSegments","width","canvas","verticalSegments","height","x","mainCharacter","getX","y","getY","onload","context","drawImage","onerror","Error","this","resetPosition","angle","right","setBgStart","bgStartX","bgStartY","setYLimit","limitY","moveUp","rotate","up","Turtle","step","moveDown","down","moveLeft","left","moveRight","applyRotation","translate","paint","turtleImage","resetTransform","angles","PI","upBtnId","leftBtnId","rightBtnId","downBtnId","addEventListener","event","includes","key","handleKeyDown","timer","mousedown","callback","requestAnimationFrame","mouseup","cancelAnimationFrame","bindControl","btn","upBtn","getElementById","leftBtn","rightBtn","downBtn","preventDefault","deltaX","deltaY","handleWheel","modal","type","id","tabIndex","classList","add","title","h1","innerText","appendChild","textContainer","appendText","text","DialogType","Confirmation","btnContainer","appendBtn","yesCallback","closeModal","noCallback","Notification","appendOKButton","listenKeyboard","Prompt","o","appendForm","Credits","appendCredits","Menu","appendMenu","Changelog","appendChangelog","body","container","isDanger","btnType","assignButtonColor","span","inputContainer","form","onOK","appendInputs","inputs","appendSelects","selects","onCancel","input","name","ariaPlaceholder","label","placeholder","maxLength","limit","assignInputClassNames","required","ariaRequired","toString","appendBrElement","s","select","option","value","default","parseInt","selected","ariaSelected","handleChange","onChange","selectedOptions","br","assignTextClassNames","t","p","sections","section","h2","ul","contributors","contributor","li","buttons","b","button","releases","release","version","status","dateTime","point","outerLi","subPoints","length","ol","subPoint","innerLi","contains","removeChild","closeAllOpenDialogs","dialogs","getElementsByClassName","confirm","Dialog","notify","prompt","credit","menu","changelog","currentLevel","Level1","Level2","levels","getContext","turtle","resizeCanvas","window","innerHeight","innerWidth","detectOrientation","screen","orientation","startsWith","focus","render","background","bgWidth","currentLvl","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call"],"sourceRoot":""}