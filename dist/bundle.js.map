{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack:///./src/background.ts","webpack:///./src/characters/character.ts","webpack:///./src/characters/shrimp.ts","webpack:///./src/characters/turtle.ts","webpack:///./src/constants/angles.ts","webpack:///./src/controls/controls.ts","webpack:///./src/controls/keyboard.ts","webpack:///./src/controls/onscreen.ts","webpack:///./src/controls/touchpad.ts","webpack:///./src/dialog/dialog.ts","webpack:///./src/dialog/enums/dialog-type.ts","webpack:///./src/levels/level-selector.ts","webpack:///./src/levels/level.ts","webpack:///./src/levels/level1.ts","webpack:///./src/levels/level2.ts","webpack:///./src/levels/levels.ts","webpack:///./src/turtle-observer.ts","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["import Turtle from \"./characters/turtle\";\r\nimport ILevel from \"./levels/ilevel\";\r\n\r\ninterface Options {\r\n  canvas: HTMLCanvasElement;\r\n  context: CanvasRenderingContext2D;\r\n  mainCharacter: Turtle;\r\n  level: ILevel;\r\n}\r\n\r\nclass Background {\r\n  static paint(backgroundImage: HTMLImageElement, options: Options) {\r\n    const horizontalSegments = Background.calculateScreenCutOffPoints(\r\n      backgroundImage.width,\r\n      options.canvas.width\r\n    );\r\n    const verticalSegments = Background.calculateScreenCutOffPoints(\r\n      backgroundImage.height,\r\n      options.canvas.height\r\n    );\r\n    const x =\r\n      options.mainCharacter.getX() < options.canvas.width\r\n        ? 0\r\n        : horizontalSegments[\r\n            Math.floor(backgroundImage.width / options.mainCharacter.getX()) - 1\r\n          ];\r\n    const y =\r\n      options.mainCharacter.getY() < options.canvas.height\r\n        ? 0\r\n        : verticalSegments[\r\n            Math.floor(backgroundImage.height / options.mainCharacter.getY()) -\r\n              1\r\n          ];\r\n    options.context.drawImage(\r\n      backgroundImage,\r\n      x,\r\n      y,\r\n      options.canvas.width,\r\n      options.canvas.height,\r\n      0,\r\n      0,\r\n      options.canvas.width,\r\n      options.canvas.height\r\n    );\r\n    options.mainCharacter.setBgStart(x, y);\r\n    options.level.setBgOffset(x, y);\r\n  }\r\n\r\n  private static calculateScreenCutOffPoints(\r\n    bgSize: number,\r\n    canvasSize: number\r\n  ): Array<number> {\r\n    const points = [];\r\n    const noOfFits = Math.floor(bgSize / canvasSize);\r\n    for (let i = 1; i < noOfFits; i++) {\r\n      points.push(i * canvasSize);\r\n    }\r\n    points.push(bgSize - noOfFits * canvasSize);\r\n    return points;\r\n  }\r\n\r\n  static readjustCanvasForBg(\r\n    canvas: HTMLCanvasElement,\r\n    bgImg: HTMLImageElement\r\n  ) {\r\n    if (bgImg.height < canvas.height) {\r\n      canvas.height = bgImg.height;\r\n    }\r\n    if (bgImg.width < canvas.width) {\r\n      canvas.width = bgImg.width;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Background;\r\n","import ICharacter from \"./icharacter\";\r\n\r\nabstract class Character implements ICharacter {\r\n  protected x: number;\r\n  protected y: number;\r\n  protected isMain: boolean;\r\n  protected isFood: boolean;\r\n  protected isObstacle: boolean;\r\n  protected image: HTMLImageElement;\r\n  protected imagePath: string;\r\n\r\n  loadImage(): Promise<HTMLImageElement> {\r\n    return new Promise((resolve, reject) => {\r\n        const image = document.createElement(\"img\");\r\n        image.src = this.imagePath;\r\n        image.onload = () => {\r\n          this.image = image;\r\n          resolve(image);\r\n        };\r\n        image.onerror = () =>\r\n          reject(new Error(\"Failed to load turtle image\"));\r\n      });\r\n  }\r\n\r\n  paint(context: CanvasRenderingContext2D): void {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n\r\n  getX = () => this.x;\r\n  getY = () => this.y;\r\n  getIsMain = () => this.isMain;\r\n  getIsFood = () => this.isFood;\r\n  getIsObstacle = () => this.isObstacle;\r\n\r\n  setPosition(x: number, y: number): void {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n}\r\n\r\nexport default Character;\r\n","import Character from \"./character\";\r\n\r\nclass Shrimp extends Character {\r\n  protected isMain: boolean = false;\r\n  protected isFood: boolean = true;\r\n  protected isObstacle: boolean = false;\r\n  protected imagePath: string = \"./images/shrimp.png\";\r\n\r\n  private foodValue: number = 0.01;\r\n\r\n  getFoodValue = () => this.foodValue;\r\n\r\n  paint(context: CanvasRenderingContext2D, bgXOffset: number = 0, bgYOffset: number = 0): void {\r\n    context.drawImage(\r\n      this.image,\r\n      this.x - bgXOffset,\r\n      this.y - bgYOffset,\r\n      this.image.width,\r\n      this.image.height\r\n    );\r\n  }\r\n}\r\n\r\nexport default Shrimp;\r\n","import angles from \"../constants/angles\";\r\nimport Character from \"./character\";\r\n\r\nclass Turtle extends Character {\r\n  static scientificName: string = \"Carretta carretta\";\r\n  protected isMain: boolean = true;\r\n  protected isFood: boolean = false;\r\n  protected isObstacle: boolean = false;\r\n  protected imagePath: string = \"./images/turtle.png\"; \r\n\r\n  private angle: number;\r\n\r\n  private bgStartX: number;\r\n  private bgStartY: number;\r\n  private limitY: number;\r\n  private static step: number = 3;\r\n\r\n  private foodValue: number;\r\n  private lifeValue: number;\r\n\r\n  constructor() {\r\n    super();\r\n    this.resetPosition();\r\n    this.angle = angles.right;\r\n    this.setBgStart(0, 0);\r\n    this.resetFoodValue();\r\n    this.resetLifeValue();\r\n  }\r\n\r\n  resetPosition() {\r\n    this.x = 50;\r\n    this.y = 10;\r\n  }\r\n\r\n  resetFoodValue() {\r\n    this.foodValue = 100;\r\n  }\r\n\r\n  resetLifeValue() {\r\n    this.lifeValue = 100;\r\n  }\r\n\r\n  increaseFoodValue(foodValue: number) {\r\n    this.foodValue += foodValue;\r\n  }\r\n\r\n  decreaseFoodValue() {\r\n    this.foodValue -= 0.01;\r\n  }\r\n\r\n  applyDamage(damage: number) {\r\n    this.lifeValue -= damage;\r\n  }\r\n\r\n  getFoodValue = () => this.foodValue;\r\n  getLifeValue = () => this.lifeValue;\r\n\r\n  setBgStart(x: number, y: number) {\r\n    this.bgStartX = x;\r\n    this.bgStartY = y;\r\n  }\r\n\r\n  setYLimit(y: number) {\r\n    this.limitY = y;\r\n  }\r\n\r\n  moveUp() {\r\n    this.rotate(angles.up);\r\n    if (this.y > 0) {\r\n      this.y -= Turtle.step;\r\n    }\r\n  }\r\n\r\n  moveDown() {\r\n    this.rotate(angles.down);\r\n    if (this.y < this.limitY) {\r\n      this.y += Turtle.step;\r\n    }\r\n  }\r\n\r\n  moveLeft() {\r\n    this.rotate(angles.left);\r\n    if (this.x > 0) {\r\n      this.x -= Turtle.step;\r\n    }\r\n  }\r\n\r\n  moveRight() {\r\n    this.rotate(angles.right);\r\n    this.x += Turtle.step;\r\n  }\r\n\r\n  private rotate(angle: number) {\r\n    this.angle = angle;\r\n  }\r\n\r\n  private applyRotation(context: CanvasRenderingContext2D) {\r\n    context.translate(this.x, this.y);\r\n    context.rotate(this.angle);\r\n    context.translate(-this.x, -this.y);\r\n  }\r\n\r\n  paint(context: CanvasRenderingContext2D) {\r\n    this.applyRotation(context);console.log(`bg start: ${this.bgStartX}, ${this.bgStartY}`)\r\n    context.drawImage(\r\n      this.image,\r\n      this.x - this.bgStartX,\r\n      this.y - this.bgStartY,\r\n      this.image.width / 4,\r\n      this.image.height / 4\r\n    );\r\n    context.resetTransform();\r\n  }\r\n}\r\n\r\nexport default Turtle;\r\n","const angles = {\r\n  up: 0,\r\n  right: Math.PI / 2,\r\n  down: Math.PI,\r\n  left: Math.PI + Math.PI / 2,\r\n};\r\n\r\nexport default angles;\r\n","import Turtle from \"../characters/turtle\";\r\nimport bindKeyboard from \"./keyboard\";\r\nimport bindOnscreenControls from \"./onscreen\";\r\nimport bindWheel from \"./touchpad\";\r\n\r\ninterface Options {\r\n  canvas: HTMLCanvasElement;\r\n  mainCharacter: Turtle;\r\n  upBtnId: string;\r\n  leftBtnId: string;\r\n  rightBtnId: string;\r\n  downBtnId: string;\r\n}\r\n\r\nfunction bindControls(options: Options) {\r\n  const {\r\n    canvas,\r\n    mainCharacter,\r\n    upBtnId,\r\n    leftBtnId,\r\n    rightBtnId,\r\n    downBtnId,\r\n  } = options;\r\n  bindKeyboard(canvas, mainCharacter);\r\n  bindWheel(canvas, mainCharacter);\r\n  bindOnscreenControls(mainCharacter, {\r\n    upBtnId,\r\n    leftBtnId,\r\n    rightBtnId,\r\n    downBtnId,\r\n  });\r\n}\r\n\r\nexport default bindControls;\r\n","import Turtle from \"../characters/turtle\";\r\n\r\nfunction handleKeyDown(event: KeyboardEvent, mainCharacter: Turtle) {\r\n  const upKeys = [\"w\", \"W\", \"ArrowUp\"];\r\n  const downKeys = [\"s\", \"S\", \"ArrowDown\"];\r\n  const leftKeys = [\"a\", \"A\", \"ArrowLeft\"];\r\n  const rightKeys = [\"d\", \"D\", \"ArrowRight\"];\r\n\r\n  if (upKeys.includes(event.key)) {\r\n    mainCharacter.moveUp();\r\n  }\r\n\r\n  if (downKeys.includes(event.key)) {\r\n    mainCharacter.moveDown();\r\n  }\r\n\r\n  if (leftKeys.includes(event.key)) {\r\n    mainCharacter.moveLeft();\r\n  }\r\n\r\n  if (rightKeys.includes(event.key)) {\r\n    mainCharacter.moveRight();\r\n  }\r\n}\r\n\r\nfunction bindKeyboard(canvas: HTMLCanvasElement, mainCharacter: Turtle) {\r\n  canvas.addEventListener(\"keydown\", (event) =>\r\n    handleKeyDown(event, mainCharacter)\r\n  );\r\n}\r\n\r\nexport default bindKeyboard;\r\n","import Turtle from \"../characters/turtle\";\r\n\r\ninterface Options {\r\n  upBtnId: string;\r\n  leftBtnId: string;\r\n  rightBtnId: string;\r\n  downBtnId: string;\r\n}\r\n\r\nlet timer = 0;\r\n\r\nfunction mousedown(mainCharacter: Turtle, callback: Function) {\r\n  callback();\r\n  timer = requestAnimationFrame(() => mousedown(mainCharacter, callback));\r\n}\r\n\r\nfunction mouseup() {\r\n  cancelAnimationFrame(timer);\r\n}\r\n\r\nfunction bindOnscreenControls(mainCharacter: Turtle, options: Options) {\r\n  const upBtn = document.getElementById(options.upBtnId) as HTMLButtonElement;\r\n  const leftBtn = document.getElementById(\r\n    options.leftBtnId\r\n  ) as HTMLButtonElement;\r\n  const rightBtn = document.getElementById(\r\n    options.rightBtnId\r\n  ) as HTMLButtonElement;\r\n  const downBtn = document.getElementById(\r\n    options.downBtnId\r\n  ) as HTMLButtonElement;\r\n\r\n  bindControl(mainCharacter, upBtn, () => mainCharacter.moveUp());\r\n  bindControl(mainCharacter, leftBtn, () => mainCharacter.moveLeft());\r\n  bindControl(mainCharacter, rightBtn, () => mainCharacter.moveRight());\r\n  bindControl(mainCharacter, downBtn, () => mainCharacter.moveDown());\r\n}\r\n\r\nfunction bindControl(\r\n  mainCharacter: Turtle,\r\n  btn: HTMLButtonElement,\r\n  callback: Function\r\n) {\r\n  btn.addEventListener(\"mousedown\", () => mousedown(mainCharacter, callback));\r\n  btn.addEventListener(\"mouseup\", mouseup);\r\n  btn.addEventListener(\"mouseleave\", mouseup);\r\n  btn.addEventListener(\"touchstart\", () => mousedown(mainCharacter, callback));\r\n  btn.addEventListener(\"touchend\", mouseup);\r\n}\r\n\r\nexport default bindOnscreenControls;\r\n","import Turtle from \"../characters/turtle\";\r\n\r\nfunction handleWheel(event: WheelEvent, mainCharacter: Turtle) {\r\n  event.preventDefault();\r\n  if (event.deltaX < 0) {\r\n    mainCharacter.moveLeft();\r\n  }\r\n  if (event.deltaX > 0) {\r\n    mainCharacter.moveRight();\r\n  }\r\n  if (event.deltaY < 0) {\r\n    mainCharacter.moveUp();\r\n  }\r\n  if (event.deltaY > 0) {\r\n    mainCharacter.moveDown();\r\n  }\r\n}\r\n\r\nfunction bindWheel(canvas: HTMLCanvasElement, mainCharacter: Turtle) {\r\n  canvas.addEventListener(\"wheel\", (event) =>\r\n    handleWheel(event, mainCharacter)\r\n  );\r\n}\r\n\r\nexport default bindWheel;\r\n","import ConfirmationDialogOptions from \"./options/confirmation-dialog-options\";\r\nimport CreditsDialogOptions from \"./options/credits-dialog-options\";\r\nimport DialogOptions from \"./options/dialog-options\";\r\nimport { DialogType } from \"./enums/dialog-type\";\r\nimport MenuDialogOptions from \"./options/menu-dialog-options\";\r\nimport PromptDialogOptions from \"./options/prompt-dialog-options\";\r\nimport PromptInput, { PromptSelect } from \"./options/prompt-input\";\r\nimport ChangelogDialogOptions from \"./options/changelog-dialog-options\";\r\n\r\nexport default class Dialog {\r\n  private static modal(type: DialogType, options: DialogOptions) {\r\n    if (!document.getElementById(options.id)) {\r\n      const modal = document.createElement(\"div\");\r\n      modal.tabIndex = 1;\r\n      modal.id = options.id;\r\n      modal.classList.add(\r\n        \"dialog\",\r\n        \"fixed\",\r\n        \"text-white\",\r\n        \"w-4/5\",\r\n        \"opacity-80\",\r\n        \"focus:opacity-95\",\r\n        \"bg-amber-500\",\r\n        \"dark:bg-gray-900\",\r\n        \"pt-5\",\r\n        \"pb-5\",\r\n        \"rounded-3xl\",\r\n        \"max-w-xl\"\r\n      );\r\n\r\n      if (options.title) {\r\n        const h1 = document.createElement(\"h1\");\r\n        h1.innerText = options.title;\r\n        h1.classList.add(\"text-center\", \"text-xl\");\r\n        modal.appendChild(h1);\r\n        modal.appendChild(document.createElement(\"hr\"));\r\n      }\r\n\r\n      const textContainer = document.createElement(\"div\");\r\n      this.appendText(options.text, textContainer);\r\n      modal.appendChild(textContainer);\r\n\r\n      switch (type) {\r\n        case DialogType.Confirmation: {\r\n          const o = options as ConfirmationDialogOptions;\r\n          const btnContainer = document.createElement(\"div\");\r\n          btnContainer.classList.add(\"w-fit\", \"m-auto\");\r\n          modal.appendChild(btnContainer);\r\n\r\n          this.appendBtn(\r\n            btnContainer,\r\n            \"Yes\",\r\n            () => {\r\n              o.yesCallback();\r\n              this.closeModal(modal);\r\n            },\r\n            false,\r\n            \"button\"\r\n          );\r\n          this.appendBtn(\r\n            btnContainer,\r\n            \"No\",\r\n            () => {\r\n              o.noCallback();\r\n              this.closeModal(modal);\r\n            },\r\n            true,\r\n            \"button\"\r\n          );\r\n          break;\r\n        }\r\n        case DialogType.Notification: {\r\n          this.appendOKButton(modal);\r\n          this.listenKeyboard(modal);\r\n          break;\r\n        }\r\n        case DialogType.Prompt: {\r\n          const o = options as PromptDialogOptions;\r\n          this.appendForm(modal, o);\r\n          break;\r\n        }\r\n        case DialogType.Credits: {\r\n          const o = options as CreditsDialogOptions;\r\n          this.appendCredits(textContainer, o);\r\n          this.appendOKButton(modal);\r\n          this.listenKeyboard(modal);\r\n          break;\r\n        }\r\n        case DialogType.Menu: {\r\n          const o = options as MenuDialogOptions;\r\n          this.appendMenu(modal, o);\r\n          this.appendOKButton(modal);\r\n          this.listenKeyboard(modal);\r\n          break;\r\n        }\r\n        case DialogType.Changelog: {\r\n          const o = options as ChangelogDialogOptions;\r\n          this.appendChangelog(modal, o);\r\n          this.appendOKButton(modal);\r\n          this.listenKeyboard(modal);\r\n          break;\r\n        }\r\n      }\r\n\r\n      document.body.appendChild(modal);\r\n    }\r\n  }\r\n\r\n  private static appendBtn(\r\n    container: HTMLDivElement | HTMLFormElement,\r\n    text: string,\r\n    callback: any,\r\n    isDanger: boolean,\r\n    btnType: \"submit\" | \"button\" | \"reset\"\r\n  ) {\r\n    const btn = document.createElement(\"button\");\r\n    btn.type = btnType;\r\n    btn.classList.add(\"rounded-3xl\", \"m-1\", \"cursor-pointer\");\r\n    this.assignButtonColor(btn, isDanger);\r\n    const span = document.createElement(\"span\");\r\n    span.classList.add(\"text-xl\", \"ml-2\", \"mr-2\");\r\n    span.innerText = text;\r\n    btn.appendChild(span);\r\n    if (btnType === \"button\") {\r\n      btn.addEventListener(\"click\", callback);\r\n    }\r\n    container.appendChild(btn);\r\n  }\r\n\r\n  private static appendForm(\r\n    modal: HTMLDivElement,\r\n    options: PromptDialogOptions\r\n  ) {\r\n    const inputContainer = document.createElement(\"div\") as HTMLDivElement;\r\n    inputContainer.classList.add(\"m-auto\", \"w-3/4\");\r\n    modal.appendChild(inputContainer);\r\n\r\n    const form = document.createElement(\"form\") as HTMLFormElement;\r\n    inputContainer.appendChild(form);\r\n    form.addEventListener(\"submit\", (event: SubmitEvent) => {\r\n      event.preventDefault();\r\n      if (options.onOK) {\r\n        options.onOK();\r\n      }\r\n      this.closeModal(modal);\r\n    });\r\n\r\n    this.appendInputs(form, options.inputs);\r\n    this.appendSelects(form, options.selects);\r\n\r\n    const btnContainer = document.createElement(\"div\") as HTMLDivElement;\r\n    btnContainer.classList.add(\"w-fit\", \"m-auto\");\r\n    form.appendChild(btnContainer);\r\n\r\n    this.appendBtn(btnContainer, \"OK\", null, false, \"submit\");\r\n    this.appendBtn(\r\n      btnContainer,\r\n      \"Cancel\",\r\n      () => {\r\n        if (options.onCancel) {\r\n          options.onCancel();\r\n        }\r\n        this.closeModal(modal);\r\n      },\r\n      true,\r\n      \"button\"\r\n    );\r\n  }\r\n\r\n  private static appendInputs(\r\n    form: HTMLFormElement,\r\n    inputs: Array<PromptInput>\r\n  ) {\r\n    for (const i of inputs) {\r\n      const input = document.createElement(\"input\");\r\n      input.type = i.type;\r\n      input.id = `dialog-input-${i.name}`;\r\n      input.name = `dialog-input-${i.name}`;\r\n      input.ariaPlaceholder = `Enter ${i.label}`;\r\n      input.placeholder = `Enter ${i.label}`;\r\n      input.maxLength = i.limit;\r\n      this.assignInputClassNames(input);\r\n      input.required = i.required;\r\n      input.ariaRequired = i.required.toString();\r\n      form.appendChild(input);\r\n\r\n      this.appendBrElement(form);\r\n      this.appendBrElement(form);\r\n    }\r\n  }\r\n\r\n  private static assignInputClassNames(input: HTMLElement) {\r\n    input.classList.add(\r\n      \"text-center\",\r\n      \"w-full\",\r\n      \"rounded-3xl\",\r\n      \"h-9\",\r\n      \"text-lg\",\r\n      \"text-gray-700\"\r\n    );\r\n  }\r\n\r\n  private static appendSelects(\r\n    form: HTMLFormElement,\r\n    selects: Array<PromptSelect>\r\n  ) {\r\n    for (const s of selects) {\r\n      const select = document.createElement(\"select\");\r\n      select.id = `dialog-select-${s.name}`;\r\n      select.name = `dialog-select-${s.name}`;\r\n      select.ariaPlaceholder = s.label;\r\n      this.assignInputClassNames(select);\r\n      select.required = s.required;\r\n      select.ariaRequired = s.required.toString();\r\n      form.appendChild(select);\r\n\r\n      for (const o of s.options) {\r\n        const option = document.createElement(\"option\");\r\n        option.innerText = o.text;\r\n        option.value = o.value;\r\n        if (s.default === parseInt(o.value)) {\r\n          option.selected = true;\r\n          option.ariaSelected = \"true\";\r\n        }\r\n        select.appendChild(option);\r\n      }\r\n\r\n      const handleChange = s.onChange;\r\n      if (handleChange) {\r\n        handleChange(select.selectedOptions[0].value);\r\n        select.addEventListener(\"change\", () =>\r\n          handleChange(select.selectedOptions[0].value)\r\n        );\r\n      }\r\n\r\n      this.appendBrElement(form);\r\n      this.appendBrElement(form);\r\n    }\r\n  }\r\n\r\n  private static appendBrElement(container: HTMLDivElement | HTMLFormElement) {\r\n    const br = document.createElement(\"br\");\r\n    container.appendChild(br);\r\n  }\r\n\r\n  private static appendText(\r\n    text: Array<string> | undefined,\r\n    container: HTMLDivElement\r\n  ) {\r\n    this.assignTextClassNames(container);\r\n    if (text) {\r\n      for (const t of text) {\r\n        const p = document.createElement(\"p\");\r\n        p.innerText = t;\r\n        container.appendChild(p);\r\n      }\r\n    }\r\n  }\r\n\r\n  private static appendCredits(\r\n    container: HTMLDivElement,\r\n    options: CreditsDialogOptions\r\n  ) {\r\n    for (const section of options.sections) {\r\n      const h2 = document.createElement(\"h2\");\r\n      h2.classList.add(\"text-xl\");\r\n      h2.innerText = section.title;\r\n      container.appendChild(h2);\r\n      const ul = document.createElement(\"ul\");\r\n      ul.classList.add(\"ml-5\");\r\n      for (const contributor of section.contributors) {\r\n        const li = document.createElement(\"li\");\r\n        li.innerText = contributor;\r\n        ul.appendChild(li);\r\n      }\r\n      container.appendChild(ul);\r\n    }\r\n  }\r\n\r\n  private static appendOKButton(modal: HTMLDivElement) {\r\n    const btnContainer = document.createElement(\"div\") as HTMLDivElement;\r\n    btnContainer.classList.add(\"w-fit\", \"m-auto\");\r\n    modal.appendChild(btnContainer);\r\n\r\n    this.appendBtn(\r\n      btnContainer,\r\n      \"OK\",\r\n      () => this.closeModal(modal),\r\n      false,\r\n      \"button\"\r\n    );\r\n  }\r\n\r\n  private static listenKeyboard(modal: HTMLDivElement) {\r\n    modal.addEventListener(\"keydown\", (event: KeyboardEvent) => {\r\n      if (event.key === \"Escape\" || event.key === \"Enter\") {\r\n        this.closeModal(modal);\r\n      }\r\n    });\r\n  }\r\n\r\n  private static appendMenu(modal: HTMLDivElement, options: MenuDialogOptions) {\r\n    const container = document.createElement(\"div\");\r\n    container.classList.add(\"w-1/3\", \"m-auto\");\r\n    modal.appendChild(container);\r\n    for (const b of options.buttons) {\r\n      const button = document.createElement(\"button\");\r\n      button.type = \"button\";\r\n      button.innerText = b.text;\r\n      button.classList.add(\"w-full\", \"h-12\", \"rounded-3xl\", \"mt-3\", \"mb-3\");\r\n      this.assignButtonColor(button, b.isDanger);\r\n      button.addEventListener(\"click\", b.callback);\r\n      container.appendChild(button);\r\n    }\r\n  }\r\n\r\n  private static appendChangelog(\r\n    modal: HTMLDivElement,\r\n    options: ChangelogDialogOptions\r\n  ) {\r\n    const container = document.createElement(\"div\");\r\n    this.assignTextClassNames(container);\r\n    modal.appendChild(container);\r\n    for (const release of options.releases) {\r\n      const h2 = document.createElement(\"h2\");\r\n      h2.classList.add(\"text-xl\");\r\n      h2.innerText = `${release.version} (${release.status} release - ${release.dateTime})`;\r\n      container.appendChild(h2);\r\n      const ul = document.createElement(\"ul\");\r\n      ul.classList.add(\"ml-5\");\r\n      container.appendChild(ul);\r\n      for (const point of release.points) {\r\n        const outerLi = document.createElement(\"li\");\r\n        outerLi.innerText = point.text;\r\n        ul.appendChild(outerLi);\r\n        if (point.subPoints && point.subPoints.length > 0) {\r\n          const ol = document.createElement(\"ol\");\r\n          ol.classList.add(\"list-decimal\", \"ml-5\");\r\n          outerLi.appendChild(ol);\r\n          for (const subPoint of point.subPoints) {\r\n            const innerLi = document.createElement(\"li\");\r\n            innerLi.innerText = subPoint;\r\n            ol.appendChild(innerLi);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private static assignTextClassNames(container: HTMLDivElement) {\r\n    container.classList.add(\r\n      \"w-11/12\",\r\n      \"m-auto\",\r\n      \"mt-3\",\r\n      \"mb-3\",\r\n      \"grid\",\r\n      \"gap-3\",\r\n      \"max-h-screen-1/4\",\r\n      \"overflow-y-auto\"\r\n    );\r\n  }\r\n\r\n  private static assignButtonColor(\r\n    button: HTMLButtonElement,\r\n    isDanger: boolean\r\n  ) {\r\n    if (isDanger) {\r\n      button.classList.add(\"bg-red-600\");\r\n    } else {\r\n      button.classList.add(\"bg-theme-color\", \"dark:bg-dark-theme-color\");\r\n    }\r\n  }\r\n\r\n  private static closeModal(modal: HTMLDivElement) {\r\n    if (document.body.contains(modal)) {\r\n      document.body.removeChild(modal);\r\n    }\r\n  }\r\n\r\n  public static confirm = (options: ConfirmationDialogOptions) =>\r\n    Dialog.modal(DialogType.Confirmation, options);\r\n  public static notify = (options: DialogOptions) =>\r\n    Dialog.modal(DialogType.Notification, options);\r\n  public static prompt = (options: PromptDialogOptions) =>\r\n    Dialog.modal(DialogType.Prompt, options);\r\n  public static credit = (options: CreditsDialogOptions) =>\r\n    Dialog.modal(DialogType.Credits, options);\r\n  public static menu = (options: MenuDialogOptions) =>\r\n    Dialog.modal(DialogType.Menu, options);\r\n  public static changelog = (options: ChangelogDialogOptions) =>\r\n    Dialog.modal(DialogType.Changelog, options);\r\n\r\n  public static closeAllOpenDialogs() {\r\n    const dialogs = document.getElementsByClassName(\r\n      \"dialog\"\r\n    ) as HTMLCollectionOf<HTMLDivElement>;\r\n    for (let i: number = 0; i < dialogs.length; i++) {\r\n      this.closeModal(dialogs[i]);\r\n    }\r\n  }\r\n}\r\n","export enum DialogType {\r\n  Confirmation = 0,\r\n  Notification = 1,\r\n  Prompt = 2,\r\n  Credits = 3,\r\n  Menu = 4,\r\n  Changelog = 5,\r\n}\r\n","import Level from \"./level\";\r\nimport levels from \"./levels\";\r\n\r\nfunction selectLvl(currentLevel: number): Level {\r\n  if (currentLevel <= levels.length) {\r\n    return levels[currentLevel - 1];\r\n  } else {\r\n    throw new Error(`Level ${currentLevel} not implemented`);\r\n  }\r\n}\r\n\r\nexport default selectLvl;\r\n","import ICharacter from \"../characters/icharacter\";\r\nimport ILevel from \"./ilevel\";\r\n\r\nabstract class Level implements ILevel {\r\n  protected abstract backgroundImagePath: string;\r\n  protected backgroundImage: HTMLImageElement;\r\n  protected abstract characters: Set<ICharacter>;\r\n  protected bgOffsetX: number;\r\n  protected bgOffsetY: number;\r\n  \r\n  loadBgImg(): Promise<HTMLImageElement> {\r\n    return new Promise((resolve, reject) => {\r\n      const backgroundImage = document.createElement(\"img\");\r\n      backgroundImage.src = this.backgroundImagePath;\r\n      backgroundImage.onload = () => {\r\n        this.backgroundImage = backgroundImage;\r\n        resolve(backgroundImage);\r\n      };\r\n      backgroundImage.onerror = () =>\r\n      reject(new Error(\"Could not load level background\"));\r\n    });\r\n  }\r\n\r\n  setBgOffset(offsetX: number, offsetY: number): void {\r\n    this.bgOffsetX = offsetX;\r\n    this.bgOffsetY = offsetY;\r\n  }\r\n  \r\n  getBgImgPath = () => this.backgroundImagePath;\r\n  getBgImg = () => this.backgroundImage;\r\n  getCharacters = () => this.characters;\r\n\r\n  setInitialCharacterPositions(): void {\r\n    for (const character of this.characters) {\r\n      const x = Math.random() * this.backgroundImage.width;\r\n      const y = Math.random() * this.backgroundImage.height;\r\n      character.setPosition(x, y);\r\n    }\r\n  }\r\n\r\n  async loadCharacters(): Promise<void> {\r\n    for (const character of this.characters) {\r\n      await character.loadImage();\r\n    }\r\n  }\r\n\r\n  paintCharacters(context: CanvasRenderingContext2D): void {\r\n    for (const character of this.characters) {\r\n      character.paint(context, this.bgOffsetX, this.bgOffsetY);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Level;\r\n","import ICharacter from \"../characters/icharacter\";\r\nimport Shrimp from \"../characters/shrimp\";\r\nimport Level from \"./level\";\r\n\r\nclass Level1 extends Level {\r\n  protected backgroundImagePath: string = \"./images/bg-lvl1.png\";\r\n  protected characters: Set<ICharacter> = new Set([\r\n    new Shrimp(),\r\n    new Shrimp(),\r\n    new Shrimp(),\r\n    new Shrimp(),\r\n    new Shrimp(),\r\n    new Shrimp(),\r\n    new Shrimp(),\r\n  ]);\r\n}\r\n\r\nexport default Level1;\r\n","import ICharacter from \"../characters/icharacter\";\r\nimport Level from \"./level\";\r\n\r\nclass Level2 extends Level {\r\n  protected backgroundImagePath: string = \"./images/bg-demo-black.png\";\r\n  protected characters: Set<ICharacter> = new Set([]);\r\n}\r\n\r\nexport default Level2;\r\n","import Level1 from \"./level1\";\r\nimport Level2 from \"./level2\";\r\n\r\nexport enum LevelChangeTypes {\r\n  GameOver = 0,\r\n  NewLevel = 1,\r\n  SameLevel = 2,\r\n  GameComplete = 3,\r\n}\r\n\r\nconst levels = [new Level1(), new Level2()];\r\n\r\nexport default levels;\r\n","import Turtle from \"./characters/turtle\";\r\nimport Dialog from \"./dialog/dialog\";\r\nimport levels, { LevelChangeTypes } from \"./levels/levels\";\r\n\r\ninterface Options {\r\n  bgWidth: number;\r\n  currentLvl: number;\r\n}\r\n\r\ninterface ReturnValue {\r\n  levelChangeType: LevelChangeTypes;\r\n  newLevel?: number;\r\n}\r\n\r\nfunction checkTurtle(mainCharacter: Turtle, options: Options): ReturnValue {\r\n  mainCharacter.decreaseFoodValue();\r\n  if (mainCharacter.getFoodValue() <= 0) {\r\n    return { levelChangeType: LevelChangeTypes.GameOver };\r\n  }\r\n\r\n  if (mainCharacter.getX() >= options.bgWidth) {\r\n    return handleOffBgWidth(mainCharacter, options);\r\n  }\r\n  return { levelChangeType: LevelChangeTypes.SameLevel };\r\n}\r\n\r\nfunction handleOffBgWidth(\r\n  mainCharacter: Turtle,\r\n  options: Options\r\n): ReturnValue {\r\n  options.currentLvl++;\r\n  mainCharacter.resetPosition();\r\n  if (options.currentLvl <= levels.length) {\r\n    Dialog.notify({\r\n      id: \"new-level\",\r\n      title: \"New Level\",\r\n      text: [`Welcome to level ${options.currentLvl}`],\r\n    });\r\n    return {\r\n      levelChangeType: LevelChangeTypes.NewLevel,\r\n      newLevel: options.currentLvl,\r\n    };\r\n  } else {\r\n    return { levelChangeType: LevelChangeTypes.GameComplete };\r\n  }\r\n}\r\n\r\nexport default checkTurtle;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import Turtle from \"./characters/turtle\";\r\nimport { version } from \"../package.json\";\r\nimport bindControls from \"./controls/controls\";\r\nimport checkTurtle from \"./turtle-observer\";\r\nimport selectLvl from \"./levels/level-selector\";\r\nimport Dialog from \"./dialog/dialog\";\r\nimport Background from \"./background\";\r\nimport Level1 from \"./levels/level1\";\r\nimport Level from \"./levels/level\";\r\nimport { LevelChangeTypes } from \"./levels/levels\";\r\n\r\n(async () => {\r\n  const canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\r\n  const context = canvas.getContext(\"2d\");\r\n  const turtle = new Turtle();\r\n  await turtle.loadImage();\r\n\r\n  let currentLevel: number = 1;\r\n\r\n  bindControls({\r\n    canvas,\r\n    mainCharacter: turtle,\r\n    upBtnId: \"upBtn\",\r\n    leftBtnId: \"leftBtn\",\r\n    rightBtnId: \"rightBtn\",\r\n    downBtnId: \"downBtn\",\r\n  });\r\n\r\n  let level: Level = new Level1();\r\n  let background = await loadLevel();\r\n\r\n  Background.readjustCanvasForBg(canvas, background);\r\n\r\n  async function loadLevel(): Promise<HTMLImageElement> {\r\n    const background = await level.loadBgImg();\r\n    level.setInitialCharacterPositions();\r\n    await level.loadCharacters();\r\n    turtle.setYLimit(background.height);\r\n    return background;\r\n  }\r\n  \r\n  async function render() {\r\n    try {\r\n      const { levelChangeType, newLevel } = checkTurtle(turtle, {\r\n        bgWidth: background.width,\r\n        currentLvl: currentLevel,\r\n      });\r\n      if (\r\n        levelChangeType === LevelChangeTypes.SameLevel ||\r\n        levelChangeType === LevelChangeTypes.NewLevel\r\n      ) {\r\n        if (levelChangeType === LevelChangeTypes.NewLevel) {\r\n          currentLevel = newLevel;\r\n          level = selectLvl(currentLevel);\r\n          background = await loadLevel();\r\n        }\r\n        \r\n        Background.paint(background, {\r\n          canvas,\r\n          context,\r\n          mainCharacter: turtle,\r\n          level,\r\n        });\r\n        \r\n        turtle.paint(context);\r\n\r\n        level.paintCharacters(context);\r\n        \r\n        updateMeters();\r\n\r\n        requestAnimationFrame(render);\r\n      } else if (levelChangeType === LevelChangeTypes.GameComplete) {\r\n        Dialog.notify({\r\n          id: \"game-over-dialog\",\r\n          title: \"Game complete\",\r\n          text: [\"Game complete. Congratulations!\"],\r\n        });\r\n      } else {\r\n        Dialog.notify({\r\n          id: \"game-over-dialog\",\r\n          title: \"You lose\",\r\n          text: [\"Better luck next time!\"],\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Dialog.notify({\r\n        id: \"game-error\",\r\n        title: \"Error\",\r\n        text: [error],\r\n      });\r\n    }\r\n  }\r\n\r\n  function resizeCanvas() {\r\n    canvas.height = window.innerHeight;\r\n    canvas.width = window.innerWidth;\r\n    Background.readjustCanvasForBg(canvas, background);\r\n  }\r\n\r\n  function updateMeters() {\r\n    const foodMeter = document.getElementById(\"foodMeter\") as HTMLMeterElement;\r\n    foodMeter.value = turtle.getFoodValue();\r\n\r\n    const lifeMeter = document.getElementById(\"lifeMeter\") as HTMLMeterElement;\r\n    lifeMeter.value = turtle.getLifeValue();\r\n  }\r\n\r\n  window.addEventListener(\"resize\", resizeCanvas);\r\n  resizeCanvas();\r\n\r\n  const versionAnchor = document.getElementById(\"version\");\r\n  versionAnchor.innerText = version;\r\n\r\n  canvas.focus();\r\n  render();\r\n\r\n  Dialog.notify({\r\n    id: \"dialog-game-welcome\",\r\n    title: \"Welcome\",\r\n    text: [\"Welcome to Turtle Escape!\"],\r\n  });\r\n\r\n  //@ts-ignore\r\n  await screen.orientation.lock(\"landscape-primary\");\r\n})();\r\n"],"names":["Background","paint","backgroundImage","options","horizontalSegments","calculateScreenCutOffPoints","width","canvas","verticalSegments","height","x","mainCharacter","getX","Math","floor","y","getY","context","drawImage","setBgStart","level","setBgOffset","bgSize","canvasSize","points","noOfFits","i","push","readjustCanvasForBg","bgImg","this","getIsMain","isMain","getIsFood","isFood","getIsObstacle","isObstacle","loadImage","Promise","resolve","reject","image","document","createElement","src","imagePath","onload","onerror","Error","setPosition","Shrimp","foodValue","getFoodValue","bgXOffset","bgYOffset","Turtle","constructor","super","getLifeValue","lifeValue","resetPosition","angle","right","resetFoodValue","resetLifeValue","increaseFoodValue","decreaseFoodValue","applyDamage","damage","bgStartX","bgStartY","setYLimit","limitY","moveUp","rotate","up","step","moveDown","down","moveLeft","left","moveRight","applyRotation","translate","console","log","resetTransform","scientificName","angles","PI","upBtnId","leftBtnId","rightBtnId","downBtnId","addEventListener","event","includes","key","handleKeyDown","timer","mousedown","callback","requestAnimationFrame","mouseup","cancelAnimationFrame","bindControl","btn","upBtn","getElementById","leftBtn","rightBtn","downBtn","preventDefault","deltaX","deltaY","handleWheel","Dialog","modal","type","id","tabIndex","classList","add","title","h1","innerText","appendChild","textContainer","appendText","text","DialogType","Confirmation","o","btnContainer","appendBtn","yesCallback","closeModal","noCallback","Notification","appendOKButton","listenKeyboard","Prompt","appendForm","Credits","appendCredits","Menu","appendMenu","Changelog","appendChangelog","body","container","isDanger","btnType","assignButtonColor","span","inputContainer","form","onOK","appendInputs","inputs","appendSelects","selects","onCancel","input","name","ariaPlaceholder","label","placeholder","maxLength","limit","assignInputClassNames","required","ariaRequired","toString","appendBrElement","s","select","option","value","default","parseInt","selected","ariaSelected","handleChange","onChange","selectedOptions","br","assignTextClassNames","t","p","section","sections","h2","ul","contributor","contributors","li","b","buttons","button","release","releases","version","status","dateTime","point","outerLi","subPoints","length","ol","subPoint","innerLi","contains","removeChild","closeAllOpenDialogs","dialogs","getElementsByClassName","confirm","notify","prompt","credit","menu","changelog","currentLevel","getBgImgPath","backgroundImagePath","getBgImg","getCharacters","characters","loadBgImg","offsetX","offsetY","bgOffsetX","bgOffsetY","setInitialCharacterPositions","character","random","loadCharacters","paintCharacters","Level1","Set","Level2","LevelChangeTypes","levels","levelChangeType","GameOver","bgWidth","currentLvl","NewLevel","newLevel","GameComplete","handleOffBgWidth","SameLevel","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","getContext","turtle","background","loadLevel","async","resizeCanvas","window","innerHeight","innerWidth","focus","render","error","screen","orientation","lock"],"sourceRoot":""}