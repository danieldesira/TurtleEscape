{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack:///./src/background.ts","webpack:///./src/characters/turtle.ts","webpack:///./src/constants/angles.ts","webpack:///./src/controls/controls.ts","webpack:///./src/controls/keyboard.ts","webpack:///./src/controls/onscreen.ts","webpack:///./src/controls/touchpad.ts","webpack:///./src/dialog/dialog.ts","webpack:///./src/dialog/enums/dialog-type.ts","webpack:///./src/levels/level-selector.ts","webpack:///./src/levels/level.ts","webpack:///./src/levels/level1.ts","webpack:///./src/levels/level2.ts","webpack:///./src/levels/levels.ts","webpack:///./src/main.ts","webpack:///./src/turtle-observer.ts","webpack:///webpack/bootstrap","webpack:///webpack/startup"],"sourcesContent":["import Turtle from \"./characters/turtle\";\r\nimport Level from \"./levels/level\";\r\n\r\ninterface Options {\r\n  canvas?: HTMLCanvasElement;\r\n  context?: CanvasRenderingContext2D;\r\n  mainCharacter?: Turtle;\r\n  level?: Level;\r\n}\r\n\r\nclass Background {\r\n  static load(options: Options): Promise<HTMLImageElement> {\r\n    return new Promise((resolve, reject) => {\r\n      const backgroundImage = document.createElement(\"img\");\r\n      backgroundImage.src = options.level.getBgImg();\r\n      backgroundImage.onload = () => resolve(backgroundImage);\r\n      backgroundImage.onerror = () =>\r\n        reject(new Error(\"Could not load level background\"));\r\n    });\r\n  }\r\n\r\n  static paint(backgroundImage: HTMLImageElement, options: Options) {\r\n    const horizontalSegments = Background.calculateScreenCutOffPoints(\r\n      backgroundImage.width,\r\n      options.canvas.width\r\n    );\r\n    const verticalSegments = Background.calculateScreenCutOffPoints(\r\n      backgroundImage.height,\r\n      options.canvas.height\r\n    );\r\n    const x =\r\n      options.mainCharacter.getX() < options.canvas.width\r\n        ? 0\r\n        : horizontalSegments[\r\n            Math.floor(backgroundImage.width / options.mainCharacter.getX()) - 1\r\n          ];\r\n    const y =\r\n      options.mainCharacter.getY() < options.canvas.height\r\n        ? 0\r\n        : verticalSegments[\r\n            Math.floor(backgroundImage.height / options.mainCharacter.getY()) -\r\n              1\r\n          ];\r\n    options.context.drawImage(\r\n      backgroundImage,\r\n      x,\r\n      y,\r\n      options.canvas.width,\r\n      options.canvas.height,\r\n      0,\r\n      0,\r\n      options.canvas.width,\r\n      options.canvas.height\r\n    );\r\n  }\r\n\r\n  private static calculateScreenCutOffPoints(\r\n    bgSize: number,\r\n    canvasSize: number\r\n  ): Array<number> {\r\n    const points = [];\r\n    const noOfFits = Math.floor(bgSize / canvasSize);\r\n    for (let i = 1; i < noOfFits; i++) {\r\n      points.push(i * canvasSize);\r\n    }\r\n    points.push(bgSize - noOfFits * canvasSize);\r\n    return points;\r\n  }\r\n\r\n  static readjustCanvasForBg(\r\n    canvas: HTMLCanvasElement,\r\n    bgImg: HTMLImageElement\r\n  ) {\r\n    if (bgImg.height < canvas.height) {\r\n      canvas.height = bgImg.height;\r\n    }\r\n    if (bgImg.width < canvas.width) {\r\n      canvas.width = bgImg.width;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Background;\r\n","import angles from \"../constants/angles\";\r\nimport Character from \"./character\";\r\n\r\nclass Turtle implements Character {\r\n  private x: number;\r\n  private y: number;\r\n  private angle: number;\r\n\r\n  private bgStartX: number;\r\n  private bgStartY: number;\r\n  private limitY: number;\r\n  private static step: number = 3;\r\n\r\n  private image: HTMLImageElement;\r\n\r\n  constructor() {\r\n    this.resetPosition();\r\n    this.angle = angles.right;\r\n    this.setBgStart(0, 0);\r\n  }\r\n\r\n  getX = () => this.x;\r\n  getY = () => this.y;\r\n\r\n  resetPosition() {\r\n    this.x = 50;\r\n    this.y = 10;\r\n  }\r\n\r\n  setBgStart(x: number, y: number) {\r\n    this.bgStartX = x;\r\n    this.bgStartY = y;\r\n  }\r\n\r\n  setYLimit(y: number) {\r\n    this.limitY = y;\r\n  }\r\n\r\n  moveUp() {\r\n    this.rotate(angles.up);\r\n    if (this.y > 0) {\r\n      this.y -= Turtle.step;\r\n    }\r\n  }\r\n\r\n  moveDown() {\r\n    this.rotate(angles.down);\r\n    if (this.y < this.limitY) {\r\n      this.y += Turtle.step;\r\n    }\r\n  }\r\n\r\n  moveLeft() {\r\n    this.rotate(angles.left);\r\n    if (this.x > 0) {\r\n      this.x -= Turtle.step;\r\n    }\r\n  }\r\n\r\n  moveRight() {\r\n    this.rotate(angles.right);\r\n    this.x += Turtle.step;\r\n  }\r\n\r\n  private rotate(angle: number) {\r\n    this.angle = angle;\r\n  }\r\n\r\n  private applyRotation(context: CanvasRenderingContext2D) {\r\n    context.translate(this.x, this.y);\r\n    context.rotate(this.angle);\r\n    context.translate(-this.x, -this.y);\r\n  }\r\n\r\n  loadImage(): Promise<HTMLImageElement> {\r\n    return new Promise((resolve, reject) => {\r\n      const turtleImage = document.createElement(\"img\");\r\n      turtleImage.src = \"./images/turtle.png\";\r\n      turtleImage.onload = () => {\r\n        this.image = turtleImage;\r\n        resolve(turtleImage);\r\n      };\r\n      turtleImage.onerror = () =>\r\n        reject(new Error(\"Failed to load turtle image\"));\r\n    });\r\n  }\r\n\r\n  paint(context: CanvasRenderingContext2D) {\r\n    this.applyRotation(context);\r\n    context.drawImage(\r\n      this.image,\r\n      this.x - this.bgStartX,\r\n      this.y - this.bgStartY,\r\n      this.image.width / 4,\r\n      this.image.height / 4\r\n    );\r\n    context.resetTransform();\r\n  }\r\n}\r\n\r\nexport default Turtle;\r\n","const angles = {\r\n  up: 0,\r\n  right: Math.PI / 2,\r\n  down: Math.PI,\r\n  left: Math.PI + Math.PI / 2,\r\n};\r\n\r\nexport default angles;\r\n","import Turtle from \"../characters/turtle\";\r\nimport bindKeyboard from \"./keyboard\";\r\nimport bindOnscreenControls from \"./onscreen\";\r\nimport bindWheel from \"./touchpad\";\r\n\r\ninterface Options {\r\n  canvas: HTMLCanvasElement;\r\n  mainCharacter: Turtle;\r\n  upBtnId: string;\r\n  leftBtnId: string;\r\n  rightBtnId: string;\r\n  downBtnId: string;\r\n}\r\n\r\nfunction bindControls(options: Options) {\r\n  const {\r\n    canvas,\r\n    mainCharacter,\r\n    upBtnId,\r\n    leftBtnId,\r\n    rightBtnId,\r\n    downBtnId,\r\n  } = options;\r\n  bindKeyboard(canvas, mainCharacter);\r\n  bindWheel(canvas, mainCharacter);\r\n  bindOnscreenControls(mainCharacter, {\r\n    upBtnId,\r\n    leftBtnId,\r\n    rightBtnId,\r\n    downBtnId,\r\n  });\r\n}\r\n\r\nexport default bindControls;\r\n","import Turtle from \"../characters/turtle\";\r\n\r\nfunction handleKeyDown(event: KeyboardEvent, mainCharacter: Turtle) {\r\n  const upKeys = [\"w\", \"W\", \"ArrowUp\"];\r\n  const downKeys = [\"s\", \"S\", \"ArrowDown\"];\r\n  const leftKeys = [\"a\", \"A\", \"ArrowLeft\"];\r\n  const rightKeys = [\"d\", \"D\", \"ArrowRight\"];\r\n\r\n  if (upKeys.includes(event.key)) {\r\n    mainCharacter.moveUp();\r\n  }\r\n\r\n  if (downKeys.includes(event.key)) {\r\n    mainCharacter.moveDown();\r\n  }\r\n\r\n  if (leftKeys.includes(event.key)) {\r\n    mainCharacter.moveLeft();\r\n  }\r\n\r\n  if (rightKeys.includes(event.key)) {\r\n    mainCharacter.moveRight();\r\n  }\r\n}\r\n\r\nfunction bindKeyboard(canvas: HTMLCanvasElement, mainCharacter: Turtle) {\r\n  canvas.addEventListener(\"keydown\", (event) =>\r\n    handleKeyDown(event, mainCharacter)\r\n  );\r\n}\r\n\r\nexport default bindKeyboard;\r\n","import Turtle from \"../characters/turtle\";\r\n\r\ninterface Options {\r\n  upBtnId: string;\r\n  leftBtnId: string;\r\n  rightBtnId: string;\r\n  downBtnId: string;\r\n}\r\n\r\nlet timer = 0;\r\n\r\nfunction mousedown(mainCharacter: Turtle, callback: Function) {\r\n  callback();\r\n  timer = requestAnimationFrame(() => mousedown(mainCharacter, callback));\r\n}\r\n\r\nfunction mouseup() {\r\n  cancelAnimationFrame(timer);\r\n}\r\n\r\nfunction bindOnscreenControls(mainCharacter: Turtle, options: Options) {\r\n  const upBtn = document.getElementById(options.upBtnId) as HTMLButtonElement;\r\n  const leftBtn = document.getElementById(\r\n    options.leftBtnId\r\n  ) as HTMLButtonElement;\r\n  const rightBtn = document.getElementById(\r\n    options.rightBtnId\r\n  ) as HTMLButtonElement;\r\n  const downBtn = document.getElementById(\r\n    options.downBtnId\r\n  ) as HTMLButtonElement;\r\n\r\n  bindControl(mainCharacter, upBtn, () => mainCharacter.moveUp());\r\n  bindControl(mainCharacter, leftBtn, () => mainCharacter.moveLeft());\r\n  bindControl(mainCharacter, rightBtn, () => mainCharacter.moveRight());\r\n  bindControl(mainCharacter, downBtn, () => mainCharacter.moveDown());\r\n}\r\n\r\nfunction bindControl(\r\n  mainCharacter: Turtle,\r\n  btn: HTMLButtonElement,\r\n  callback: Function\r\n) {\r\n  btn.addEventListener(\"mousedown\", () => mousedown(mainCharacter, callback));\r\n  btn.addEventListener(\"mouseup\", mouseup);\r\n  btn.addEventListener(\"mouseleave\", mouseup);\r\n  btn.addEventListener(\"touchstart\", () => mousedown(mainCharacter, callback));\r\n  btn.addEventListener(\"touchend\", mouseup);\r\n}\r\n\r\nexport default bindOnscreenControls;\r\n","import Turtle from \"../characters/turtle\";\r\n\r\nfunction handleWheel(event: WheelEvent, mainCharacter: Turtle) {\r\n  event.preventDefault();\r\n  if (event.deltaX < 0) {\r\n    mainCharacter.moveLeft();\r\n  }\r\n  if (event.deltaX > 0) {\r\n    mainCharacter.moveRight();\r\n  }\r\n  if (event.deltaY < 0) {\r\n    mainCharacter.moveUp();\r\n  }\r\n  if (event.deltaY > 0) {\r\n    mainCharacter.moveDown();\r\n  }\r\n}\r\n\r\nfunction bindWheel(canvas: HTMLCanvasElement, mainCharacter: Turtle) {\r\n  canvas.addEventListener(\"wheel\", (event) =>\r\n    handleWheel(event, mainCharacter)\r\n  );\r\n}\r\n\r\nexport default bindWheel;\r\n","import ConfirmationDialogOptions from \"./options/confirmation-dialog-options\";\r\nimport CreditsDialogOptions from \"./options/credits-dialog-options\";\r\nimport DialogOptions from \"./options/dialog-options\";\r\nimport { DialogType } from \"./enums/dialog-type\";\r\nimport MenuDialogOptions from \"./options/menu-dialog-options\";\r\nimport PromptDialogOptions from \"./options/prompt-dialog-options\";\r\nimport PromptInput, { PromptSelect } from \"./options/prompt-input\";\r\nimport ChangelogDialogOptions from \"./options/changelog-dialog-options\";\r\n\r\nexport default class Dialog {\r\n  private static modal(type: DialogType, options: DialogOptions) {\r\n    if (!document.getElementById(options.id)) {\r\n      const modal = document.createElement(\"div\");\r\n      modal.tabIndex = 1;\r\n      modal.id = options.id;\r\n      modal.classList.add(\r\n        \"dialog\",\r\n        \"fixed\",\r\n        \"text-white\",\r\n        \"w-4/5\",\r\n        \"opacity-80\",\r\n        \"focus:opacity-95\",\r\n        \"bg-amber-500\",\r\n        \"dark:bg-gray-900\",\r\n        \"pt-5\",\r\n        \"pb-5\",\r\n        \"rounded-3xl\",\r\n        \"max-w-xl\"\r\n      );\r\n\r\n      if (options.title) {\r\n        const h1 = document.createElement(\"h1\");\r\n        h1.innerText = options.title;\r\n        h1.classList.add(\"text-center\", \"text-xl\");\r\n        modal.appendChild(h1);\r\n        modal.appendChild(document.createElement(\"hr\"));\r\n      }\r\n\r\n      const textContainer = document.createElement(\"div\");\r\n      this.appendText(options.text, textContainer);\r\n      modal.appendChild(textContainer);\r\n\r\n      switch (type) {\r\n        case DialogType.Confirmation: {\r\n          const o = options as ConfirmationDialogOptions;\r\n          const btnContainer = document.createElement(\"div\");\r\n          btnContainer.classList.add(\"w-fit\", \"m-auto\");\r\n          modal.appendChild(btnContainer);\r\n\r\n          this.appendBtn(\r\n            btnContainer,\r\n            \"Yes\",\r\n            () => {\r\n              o.yesCallback();\r\n              this.closeModal(modal);\r\n            },\r\n            false,\r\n            \"button\"\r\n          );\r\n          this.appendBtn(\r\n            btnContainer,\r\n            \"No\",\r\n            () => {\r\n              o.noCallback();\r\n              this.closeModal(modal);\r\n            },\r\n            true,\r\n            \"button\"\r\n          );\r\n          break;\r\n        }\r\n        case DialogType.Notification: {\r\n          this.appendOKButton(modal);\r\n          this.listenKeyboard(modal);\r\n          break;\r\n        }\r\n        case DialogType.Prompt: {\r\n          const o = options as PromptDialogOptions;\r\n          this.appendForm(modal, o);\r\n          break;\r\n        }\r\n        case DialogType.Credits: {\r\n          const o = options as CreditsDialogOptions;\r\n          this.appendCredits(textContainer, o);\r\n          this.appendOKButton(modal);\r\n          this.listenKeyboard(modal);\r\n          break;\r\n        }\r\n        case DialogType.Menu: {\r\n          const o = options as MenuDialogOptions;\r\n          this.appendMenu(modal, o);\r\n          this.appendOKButton(modal);\r\n          this.listenKeyboard(modal);\r\n          break;\r\n        }\r\n        case DialogType.Changelog: {\r\n          const o = options as ChangelogDialogOptions;\r\n          this.appendChangelog(modal, o);\r\n          this.appendOKButton(modal);\r\n          this.listenKeyboard(modal);\r\n          break;\r\n        }\r\n      }\r\n\r\n      document.body.appendChild(modal);\r\n    }\r\n  }\r\n\r\n  private static appendBtn(\r\n    container: HTMLDivElement | HTMLFormElement,\r\n    text: string,\r\n    callback: any,\r\n    isDanger: boolean,\r\n    btnType: \"submit\" | \"button\" | \"reset\"\r\n  ) {\r\n    const btn = document.createElement(\"button\");\r\n    btn.type = btnType;\r\n    btn.classList.add(\"rounded-3xl\", \"m-1\", \"cursor-pointer\");\r\n    this.assignButtonColor(btn, isDanger);\r\n    const span = document.createElement(\"span\");\r\n    span.classList.add(\"text-xl\", \"ml-2\", \"mr-2\");\r\n    span.innerText = text;\r\n    btn.appendChild(span);\r\n    if (btnType === \"button\") {\r\n      btn.addEventListener(\"click\", callback);\r\n    }\r\n    container.appendChild(btn);\r\n  }\r\n\r\n  private static appendForm(\r\n    modal: HTMLDivElement,\r\n    options: PromptDialogOptions\r\n  ) {\r\n    const inputContainer = document.createElement(\"div\") as HTMLDivElement;\r\n    inputContainer.classList.add(\"m-auto\", \"w-3/4\");\r\n    modal.appendChild(inputContainer);\r\n\r\n    const form = document.createElement(\"form\") as HTMLFormElement;\r\n    inputContainer.appendChild(form);\r\n    form.addEventListener(\"submit\", (event: SubmitEvent) => {\r\n      event.preventDefault();\r\n      if (options.onOK) {\r\n        options.onOK();\r\n      }\r\n      this.closeModal(modal);\r\n    });\r\n\r\n    this.appendInputs(form, options.inputs);\r\n    this.appendSelects(form, options.selects);\r\n\r\n    const btnContainer = document.createElement(\"div\") as HTMLDivElement;\r\n    btnContainer.classList.add(\"w-fit\", \"m-auto\");\r\n    form.appendChild(btnContainer);\r\n\r\n    this.appendBtn(btnContainer, \"OK\", null, false, \"submit\");\r\n    this.appendBtn(\r\n      btnContainer,\r\n      \"Cancel\",\r\n      () => {\r\n        if (options.onCancel) {\r\n          options.onCancel();\r\n        }\r\n        this.closeModal(modal);\r\n      },\r\n      true,\r\n      \"button\"\r\n    );\r\n  }\r\n\r\n  private static appendInputs(\r\n    form: HTMLFormElement,\r\n    inputs: Array<PromptInput>\r\n  ) {\r\n    for (const i of inputs) {\r\n      const input = document.createElement(\"input\");\r\n      input.type = i.type;\r\n      input.id = `dialog-input-${i.name}`;\r\n      input.name = `dialog-input-${i.name}`;\r\n      input.ariaPlaceholder = `Enter ${i.label}`;\r\n      input.placeholder = `Enter ${i.label}`;\r\n      input.maxLength = i.limit;\r\n      this.assignInputClassNames(input);\r\n      input.required = i.required;\r\n      input.ariaRequired = i.required.toString();\r\n      form.appendChild(input);\r\n\r\n      this.appendBrElement(form);\r\n      this.appendBrElement(form);\r\n    }\r\n  }\r\n\r\n  private static assignInputClassNames(input: HTMLElement) {\r\n    input.classList.add(\r\n      \"text-center\",\r\n      \"w-full\",\r\n      \"rounded-3xl\",\r\n      \"h-9\",\r\n      \"text-lg\",\r\n      \"text-gray-700\"\r\n    );\r\n  }\r\n\r\n  private static appendSelects(\r\n    form: HTMLFormElement,\r\n    selects: Array<PromptSelect>\r\n  ) {\r\n    for (const s of selects) {\r\n      const select = document.createElement(\"select\");\r\n      select.id = `dialog-select-${s.name}`;\r\n      select.name = `dialog-select-${s.name}`;\r\n      select.ariaPlaceholder = s.label;\r\n      this.assignInputClassNames(select);\r\n      select.required = s.required;\r\n      select.ariaRequired = s.required.toString();\r\n      form.appendChild(select);\r\n\r\n      for (const o of s.options) {\r\n        const option = document.createElement(\"option\");\r\n        option.innerText = o.text;\r\n        option.value = o.value;\r\n        if (s.default === parseInt(o.value)) {\r\n          option.selected = true;\r\n          option.ariaSelected = \"true\";\r\n        }\r\n        select.appendChild(option);\r\n      }\r\n\r\n      const handleChange = s.onChange;\r\n      if (handleChange) {\r\n        handleChange(select.selectedOptions[0].value);\r\n        select.addEventListener(\"change\", () =>\r\n          handleChange(select.selectedOptions[0].value)\r\n        );\r\n      }\r\n\r\n      this.appendBrElement(form);\r\n      this.appendBrElement(form);\r\n    }\r\n  }\r\n\r\n  private static appendBrElement(container: HTMLDivElement | HTMLFormElement) {\r\n    const br = document.createElement(\"br\");\r\n    container.appendChild(br);\r\n  }\r\n\r\n  private static appendText(\r\n    text: Array<string> | undefined,\r\n    container: HTMLDivElement\r\n  ) {\r\n    this.assignTextClassNames(container);\r\n    if (text) {\r\n      for (const t of text) {\r\n        const p = document.createElement(\"p\");\r\n        p.innerText = t;\r\n        container.appendChild(p);\r\n      }\r\n    }\r\n  }\r\n\r\n  private static appendCredits(\r\n    container: HTMLDivElement,\r\n    options: CreditsDialogOptions\r\n  ) {\r\n    for (const section of options.sections) {\r\n      const h2 = document.createElement(\"h2\");\r\n      h2.classList.add(\"text-xl\");\r\n      h2.innerText = section.title;\r\n      container.appendChild(h2);\r\n      const ul = document.createElement(\"ul\");\r\n      ul.classList.add(\"ml-5\");\r\n      for (const contributor of section.contributors) {\r\n        const li = document.createElement(\"li\");\r\n        li.innerText = contributor;\r\n        ul.appendChild(li);\r\n      }\r\n      container.appendChild(ul);\r\n    }\r\n  }\r\n\r\n  private static appendOKButton(modal: HTMLDivElement) {\r\n    const btnContainer = document.createElement(\"div\") as HTMLDivElement;\r\n    btnContainer.classList.add(\"w-fit\", \"m-auto\");\r\n    modal.appendChild(btnContainer);\r\n\r\n    this.appendBtn(\r\n      btnContainer,\r\n      \"OK\",\r\n      () => this.closeModal(modal),\r\n      false,\r\n      \"button\"\r\n    );\r\n  }\r\n\r\n  private static listenKeyboard(modal: HTMLDivElement) {\r\n    modal.addEventListener(\"keydown\", (event: KeyboardEvent) => {\r\n      if (event.key === \"Escape\" || event.key === \"Enter\") {\r\n        this.closeModal(modal);\r\n      }\r\n    });\r\n  }\r\n\r\n  private static appendMenu(modal: HTMLDivElement, options: MenuDialogOptions) {\r\n    const container = document.createElement(\"div\");\r\n    container.classList.add(\"w-1/3\", \"m-auto\");\r\n    modal.appendChild(container);\r\n    for (const b of options.buttons) {\r\n      const button = document.createElement(\"button\");\r\n      button.type = \"button\";\r\n      button.innerText = b.text;\r\n      button.classList.add(\"w-full\", \"h-12\", \"rounded-3xl\", \"mt-3\", \"mb-3\");\r\n      this.assignButtonColor(button, b.isDanger);\r\n      button.addEventListener(\"click\", b.callback);\r\n      container.appendChild(button);\r\n    }\r\n  }\r\n\r\n  private static appendChangelog(\r\n    modal: HTMLDivElement,\r\n    options: ChangelogDialogOptions\r\n  ) {\r\n    const container = document.createElement(\"div\");\r\n    this.assignTextClassNames(container);\r\n    modal.appendChild(container);\r\n    for (const release of options.releases) {\r\n      const h2 = document.createElement(\"h2\");\r\n      h2.classList.add(\"text-xl\");\r\n      h2.innerText = `${release.version} (${release.status} release - ${release.dateTime})`;\r\n      container.appendChild(h2);\r\n      const ul = document.createElement(\"ul\");\r\n      ul.classList.add(\"ml-5\");\r\n      container.appendChild(ul);\r\n      for (const point of release.points) {\r\n        const outerLi = document.createElement(\"li\");\r\n        outerLi.innerText = point.text;\r\n        ul.appendChild(outerLi);\r\n        if (point.subPoints && point.subPoints.length > 0) {\r\n          const ol = document.createElement(\"ol\");\r\n          ol.classList.add(\"list-decimal\", \"ml-5\");\r\n          outerLi.appendChild(ol);\r\n          for (const subPoint of point.subPoints) {\r\n            const innerLi = document.createElement(\"li\");\r\n            innerLi.innerText = subPoint;\r\n            ol.appendChild(innerLi);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private static assignTextClassNames(container: HTMLDivElement) {\r\n    container.classList.add(\r\n      \"w-11/12\",\r\n      \"m-auto\",\r\n      \"mt-3\",\r\n      \"mb-3\",\r\n      \"grid\",\r\n      \"gap-3\",\r\n      \"max-h-screen-1/4\",\r\n      \"overflow-y-auto\"\r\n    );\r\n  }\r\n\r\n  private static assignButtonColor(\r\n    button: HTMLButtonElement,\r\n    isDanger: boolean\r\n  ) {\r\n    if (isDanger) {\r\n      button.classList.add(\"bg-red-600\");\r\n    } else {\r\n      button.classList.add(\"bg-theme-color\", \"dark:bg-dark-theme-color\");\r\n    }\r\n  }\r\n\r\n  private static closeModal(modal: HTMLDivElement) {\r\n    if (document.body.contains(modal)) {\r\n      document.body.removeChild(modal);\r\n    }\r\n  }\r\n\r\n  public static confirm = (options: ConfirmationDialogOptions) =>\r\n    Dialog.modal(DialogType.Confirmation, options);\r\n  public static notify = (options: DialogOptions) =>\r\n    Dialog.modal(DialogType.Notification, options);\r\n  public static prompt = (options: PromptDialogOptions) =>\r\n    Dialog.modal(DialogType.Prompt, options);\r\n  public static credit = (options: CreditsDialogOptions) =>\r\n    Dialog.modal(DialogType.Credits, options);\r\n  public static menu = (options: MenuDialogOptions) =>\r\n    Dialog.modal(DialogType.Menu, options);\r\n  public static changelog = (options: ChangelogDialogOptions) =>\r\n    Dialog.modal(DialogType.Changelog, options);\r\n\r\n  public static closeAllOpenDialogs() {\r\n    const dialogs = document.getElementsByClassName(\r\n      \"dialog\"\r\n    ) as HTMLCollectionOf<HTMLDivElement>;\r\n    for (let i: number = 0; i < dialogs.length; i++) {\r\n      this.closeModal(dialogs[i]);\r\n    }\r\n  }\r\n}\r\n","export enum DialogType {\r\n  Confirmation = 0,\r\n  Notification = 1,\r\n  Prompt = 2,\r\n  Credits = 3,\r\n  Menu = 4,\r\n  Changelog = 5,\r\n}\r\n","import Level from \"./level\";\r\nimport levels from \"./levels\";\r\n\r\nfunction selectLvl(currentLevel: number): Level {\r\n  if (currentLevel <= levels.length) {\r\n    return levels[currentLevel - 1];\r\n  } else {\r\n    throw new Error(`Level ${currentLevel} not implemented`);\r\n  }\r\n}\r\n\r\nexport default selectLvl;\r\n","import Level1 from \"./level1\";\r\n\r\nabstract class Level {\r\n  protected abstract backgroundImage: string;\r\n\r\n  getBgImg = () => this.backgroundImage;\r\n}\r\n\r\nexport default Level;\r\n","import Level from \"./level\";\r\n\r\nclass Level1 extends Level {\r\n  protected backgroundImage: string = \"./images/bg-lvl1.png\";\r\n}\r\n\r\nexport default Level1;\r\n","import Level from \"./level\";\r\n\r\nclass Level2 extends Level {\r\n  protected backgroundImage: string = \"./images/bg-demo-black.png\";\r\n}\r\n\r\nexport default Level2;\r\n","import Level1 from \"./level1\";\r\nimport Level2 from \"./level2\";\r\n\r\nexport enum LevelChangeTypes {\r\n  GameOver = 0,\r\n  NewLevel = 1,\r\n  SameLevel = 2,\r\n  GameComplete = 3,\r\n}\r\n\r\nconst levels = [new Level1(), new Level2()];\r\n\r\nexport default levels;\r\n","import Turtle from \"./characters/turtle\";\r\nimport { version } from \"../package.json\";\r\nimport bindControls from \"./controls/controls\";\r\nimport checkTurtle from \"./turtle-observer\";\r\nimport selectLvl from \"./levels/level-selector\";\r\nimport Dialog from \"./dialog/dialog\";\r\nimport Background from \"./background\";\r\nimport Level1 from \"./levels/level1\";\r\nimport Level from \"./levels/level\";\r\nimport { LevelChangeTypes } from \"./levels/levels\";\r\n\r\n(async () => {\r\n  const canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\r\n  const context = canvas.getContext(\"2d\");\r\n  const turtle = new Turtle();\r\n  await turtle.loadImage();\r\n\r\n  let currentLevel: number = 1;\r\n\r\n  bindControls({\r\n    canvas,\r\n    mainCharacter: turtle,\r\n    upBtnId: \"upBtn\",\r\n    leftBtnId: \"leftBtn\",\r\n    rightBtnId: \"rightBtn\",\r\n    downBtnId: \"downBtn\",\r\n  });\r\n\r\n  let level: Level | true = new Level1();\r\n  let background: HTMLImageElement = await Background.load({\r\n    canvas,\r\n    context,\r\n    mainCharacter: turtle,\r\n    level,\r\n  });\r\n\r\n  Background.readjustCanvasForBg(canvas, background);\r\n\r\n  async function render() {\r\n    try {\r\n      const { levelChangeType, newLevel } = checkTurtle(turtle, {\r\n        bgWidth: background.width,\r\n        currentLvl: currentLevel,\r\n      });\r\n      if (levelChangeType === LevelChangeTypes.SameLevel || levelChangeType === LevelChangeTypes.NewLevel) {\r\n        if (levelChangeType === LevelChangeTypes.NewLevel) {\r\n          currentLevel = newLevel;\r\n        }\r\n        level = selectLvl(currentLevel);\r\n        background = await Background.load({ level });\r\n        Background.paint(background, {\r\n          canvas,\r\n          context,\r\n          mainCharacter: turtle,\r\n        });\r\n\r\n        turtle.setYLimit(background.height);\r\n        turtle.paint(context);\r\n\r\n        requestAnimationFrame(render);\r\n      } else if (levelChangeType === LevelChangeTypes.GameComplete) {\r\n        Dialog.notify({\r\n          id: \"game-over-dialog\",\r\n          title: \"Game complete\",\r\n          text: [\"Game complete. Congratulations!\"],\r\n        });\r\n      } else {\r\n        Dialog.notify({\r\n          id: \"game-over-dialog\",\r\n          title: \"You lose\",\r\n          text: [\"Better luck next time!\"],\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Dialog.notify({\r\n        id: \"game-error\",\r\n        title: \"Error\",\r\n        text: [error],\r\n      });\r\n    }\r\n  }\r\n\r\n  function resizeCanvas() {\r\n    canvas.height = window.innerHeight;\r\n    canvas.width = window.innerWidth;\r\n    Background.readjustCanvasForBg(canvas, background);\r\n  }\r\n\r\n  window.addEventListener(\"resize\", resizeCanvas);\r\n  resizeCanvas();\r\n\r\n  const versionAnchor = document.getElementById(\"version\");\r\n  versionAnchor.innerText = version;\r\n\r\n  canvas.focus();\r\n  render();\r\n\r\n  Dialog.notify({\r\n    id: \"dialog-game-welcome\",\r\n    title: \"Welcome\",\r\n    text: [\"Welcome to Turtle Escape!\"],\r\n  });\r\n\r\n  //@ts-ignore\r\n  await screen.orientation.lock(\"landscape-primary\");\r\n})();\r\n","import Turtle from \"./characters/turtle\";\r\nimport Dialog from \"./dialog/dialog\";\r\nimport levels, { LevelChangeTypes } from \"./levels/levels\";\r\n\r\ninterface Options {\r\n  bgWidth: number;\r\n  currentLvl: number;\r\n}\r\n\r\ninterface ReturnValue {\r\n  levelChangeType: LevelChangeTypes;\r\n  newLevel?: number;\r\n}\r\n\r\nfunction checkTurtle(mainCharacter: Turtle, options: Options): ReturnValue {\r\n  if (mainCharacter.getX() >= options.bgWidth) {\r\n    options.currentLvl++;\r\n    mainCharacter.resetPosition();\r\n    if (options.currentLvl <= levels.length) {\r\n      Dialog.notify({\r\n        id: \"new-level\",\r\n        title: \"New Level\",\r\n        text: [`Welcome to level ${options.currentLvl}`],\r\n      });\r\n      return {\r\n        levelChangeType: LevelChangeTypes.NewLevel,\r\n        newLevel: options.currentLvl,\r\n      };\r\n    } else {\r\n      return { levelChangeType: LevelChangeTypes.GameComplete };\r\n    }\r\n  }\r\n  return { levelChangeType: LevelChangeTypes.SameLevel };\r\n}\r\n\r\nexport default checkTurtle;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(519);\n"],"names":["load","options","Promise","resolve","reject","backgroundImage","document","createElement","src","level","getBgImg","onload","onerror","Error","paint","horizontalSegments","Background","calculateScreenCutOffPoints","width","canvas","verticalSegments","height","x","mainCharacter","getX","Math","floor","y","getY","context","drawImage","bgSize","canvasSize","points","noOfFits","i","push","readjustCanvasForBg","bgImg","this","resetPosition","angle","right","setBgStart","bgStartX","bgStartY","setYLimit","limitY","moveUp","rotate","up","Turtle","step","moveDown","down","moveLeft","left","moveRight","applyRotation","translate","loadImage","turtleImage","image","resetTransform","angles","PI","upBtnId","leftBtnId","rightBtnId","downBtnId","addEventListener","event","includes","key","handleKeyDown","timer","mousedown","callback","requestAnimationFrame","mouseup","cancelAnimationFrame","bindControl","btn","upBtn","getElementById","leftBtn","rightBtn","downBtn","preventDefault","deltaX","deltaY","handleWheel","modal","type","id","tabIndex","classList","add","title","h1","innerText","appendChild","textContainer","appendText","text","DialogType","Confirmation","btnContainer","appendBtn","yesCallback","closeModal","noCallback","Notification","appendOKButton","listenKeyboard","Prompt","o","appendForm","Credits","appendCredits","Menu","appendMenu","Changelog","appendChangelog","body","container","isDanger","btnType","assignButtonColor","span","inputContainer","form","onOK","appendInputs","inputs","appendSelects","selects","onCancel","input","name","ariaPlaceholder","label","placeholder","maxLength","limit","assignInputClassNames","required","ariaRequired","toString","appendBrElement","s","select","option","value","default","parseInt","selected","ariaSelected","handleChange","onChange","selectedOptions","br","assignTextClassNames","t","p","sections","section","h2","ul","contributors","contributor","li","buttons","b","button","releases","release","version","status","dateTime","point","outerLi","subPoints","length","ol","subPoint","innerLi","contains","removeChild","closeAllOpenDialogs","dialogs","getElementsByClassName","confirm","Dialog","notify","prompt","credit","menu","changelog","currentLevel","Level1","Level2","LevelChangeTypes","levels","render","turtle","bgWidth","background","currentLvl","levelChangeType","newLevel","SameLevel","NewLevel","GameComplete","resizeCanvas","window","innerHeight","innerWidth","getContext","focus","screen","orientation","lock","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call"],"sourceRoot":""}