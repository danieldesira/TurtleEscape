{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack:///./src/background.ts","webpack:///./src/characters/character.ts","webpack:///./src/characters/plastic-bag.ts","webpack:///./src/characters/shrimp.ts","webpack:///./src/characters/small-fish.ts","webpack:///./src/characters/turtle.ts","webpack:///./src/constants/angles.ts","webpack:///./src/controls/controls.ts","webpack:///./src/controls/keyboard.ts","webpack:///./src/controls/onscreen.ts","webpack:///./src/controls/touchpad.ts","webpack:///./src/dialog/dialog.ts","webpack:///./src/dialog/enums/dialog-type.ts","webpack:///./src/levels/level-selector.ts","webpack:///./src/levels/level.ts","webpack:///./src/levels/level1.ts","webpack:///./src/levels/level2.ts","webpack:///./src/levels/levels.ts","webpack:///./src/turtle-observer.ts","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["import Turtle from \"./characters/turtle\";\r\nimport ILevel from \"./levels/ilevel\";\r\n\r\ninterface Options {\r\n  canvas: HTMLCanvasElement;\r\n  context: CanvasRenderingContext2D;\r\n  mainCharacter: Turtle;\r\n  level: ILevel;\r\n}\r\n\r\nclass Background {\r\n  static paint(backgroundImage: HTMLImageElement, options: Options) {\r\n    const horizontalSegments = Background.calculateScreenCutOffPoints(\r\n      backgroundImage.width,\r\n      options.canvas.width\r\n    );\r\n    const verticalSegments = Background.calculateScreenCutOffPoints(\r\n      backgroundImage.height,\r\n      options.canvas.height\r\n    );\r\n    const x =\r\n      options.mainCharacter.x < options.canvas.width\r\n        ? 0\r\n        : horizontalSegments[\r\n            Math.floor(backgroundImage.width / options.mainCharacter.x) - 1\r\n          ];\r\n    const y =\r\n      options.mainCharacter.y < options.canvas.height\r\n        ? 0\r\n        : verticalSegments[\r\n            Math.floor(backgroundImage.height / options.mainCharacter.y) - 1\r\n          ];\r\n    options.context.drawImage(\r\n      backgroundImage,\r\n      x,\r\n      y,\r\n      options.canvas.width,\r\n      options.canvas.height,\r\n      0,\r\n      0,\r\n      options.canvas.width,\r\n      options.canvas.height\r\n    );\r\n    Background.updateBgRelatedProperties(options, x, y);\r\n  }\r\n\r\n  private static calculateScreenCutOffPoints(\r\n    bgSize: number,\r\n    canvasSize: number\r\n  ): Array<number> {\r\n    const points = [];\r\n    const noOfFits = Math.floor(bgSize / canvasSize);\r\n    for (let i = 1; i < noOfFits; i++) {\r\n      points.push(i * canvasSize);\r\n    }\r\n    points.push(bgSize - noOfFits * canvasSize);\r\n    return points;\r\n  }\r\n\r\n  static readjustCanvasForBg(\r\n    canvas: HTMLCanvasElement,\r\n    bgImg: HTMLImageElement\r\n  ) {\r\n    if (bgImg.height < canvas.height) {\r\n      canvas.height = bgImg.height;\r\n    }\r\n    if (bgImg.width < canvas.width) {\r\n      canvas.width = bgImg.width;\r\n    }\r\n  }\r\n\r\n  private static updateBgRelatedProperties(\r\n    options: Options,\r\n    x: number,\r\n    y: number\r\n  ) {\r\n    options.mainCharacter.bgStartX = x;\r\n    options.mainCharacter.bgStartY = y;\r\n    options.level.bgOffsetX = x;\r\n    options.level.bgOffsetY = y;\r\n  }\r\n}\r\n\r\nexport default Background;\r\n","import ICharacter from \"./icharacter\";\r\n\r\nabstract class Character implements ICharacter {\r\n  protected _x: number;\r\n  protected _y: number;\r\n  protected abstract _isMain: boolean;\r\n  protected abstract _isPrey: boolean;\r\n  protected abstract _isObstacle: boolean;\r\n  protected _image: HTMLImageElement;\r\n  protected _baseImagePath: string = \"./images/\";\r\n  protected abstract _imageFilename: string;\r\n  protected abstract _foodValue: number;\r\n  protected abstract _damage: number;\r\n\r\n  loadImage(): Promise<HTMLImageElement> {\r\n    return new Promise((resolve, reject) => {\r\n      const image = document.createElement(\"img\");\r\n      image.src = this._baseImagePath + this._imageFilename;\r\n      image.onload = () => {\r\n        this._image = image;\r\n        resolve(image);\r\n      };\r\n      image.onerror = () =>\r\n        reject(\r\n          new Error(`Failed to load character image: ${this._imageFilename}`)\r\n        );\r\n    });\r\n  }\r\n\r\n  abstract paint(context: CanvasRenderingContext2D): void;\r\n\r\n  get x() {\r\n    return this._x;\r\n  }\r\n\r\n  get y() {\r\n    return this._y;\r\n  }\r\n\r\n  set x(x: number) {\r\n    this._x = x;\r\n  }\r\n\r\n  set y(y: number) {\r\n    this._y = y;\r\n  }\r\n\r\n  get isMain() {\r\n    return this._isMain;\r\n  }\r\n\r\n  get isPrey() {\r\n    return this._isPrey;\r\n  }\r\n\r\n  get isObstacle() {\r\n    return this._isObstacle;\r\n  }\r\n\r\n  get foodValue() {\r\n    return this._foodValue;\r\n  }\r\n\r\n  get damage() {\r\n    return this._damage;\r\n  }\r\n\r\n  get image() {\r\n    return this._image;\r\n  }\r\n}\r\n\r\nexport default Character;\r\n","import Character from \"./character\";\r\n\r\nclass PlasticBag extends Character {\r\n  protected _isMain: boolean = false;\r\n  protected _isPrey: boolean = false;\r\n  protected _isObstacle: boolean = true;\r\n  protected _imageFilename: string = \"plastic-bag.png\";\r\n  protected _foodValue: number;\r\n  protected _damage: number = 8;\r\n\r\n  paint(\r\n    context: CanvasRenderingContext2D,\r\n    bgXOffset: number = 0,\r\n    bgYOffset: number = 0\r\n  ): void {\r\n    context.drawImage(\r\n      this.image,\r\n      this.x - bgXOffset,\r\n      this.y - bgYOffset,\r\n      this.image.width,\r\n      this.image.height\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlasticBag;\r\n","import Character from \"./character\";\r\n\r\nclass Shrimp extends Character {\r\n  protected _isMain: boolean = false;\r\n  protected _isPrey: boolean = true;\r\n  protected _isObstacle: boolean = false;\r\n  protected _imageFilename: string = \"shrimp.png\";\r\n\r\n  protected _foodValue: number = 0.01;\r\n  protected _damage: number;\r\n\r\n  paint(\r\n    context: CanvasRenderingContext2D,\r\n    bgXOffset: number = 0,\r\n    bgYOffset: number = 0\r\n  ): void {\r\n    context.drawImage(\r\n      this.image,\r\n      this.x - bgXOffset,\r\n      this.y - bgYOffset,\r\n      this.image.width,\r\n      this.image.height\r\n    );\r\n  }\r\n}\r\n\r\nexport default Shrimp;\r\n","import Character from \"./character\";\r\n\r\nclass SmallFish extends Character {\r\n  protected _isMain: boolean = false;\r\n  protected _isPrey: boolean = true;\r\n  protected _isObstacle: boolean = false;\r\n  protected _imageFilename: string = \"small-fish.png\";\r\n  protected _foodValue: number = 0.6;\r\n  protected _damage: number;\r\n\r\n  paint(\r\n    context: CanvasRenderingContext2D,\r\n    bgXOffset: number = 0,\r\n    bgYOffset: number = 0\r\n  ): void {\r\n    context.drawImage(\r\n      this.image,\r\n      this.x - bgXOffset,\r\n      this.y - bgYOffset,\r\n      this.image.width,\r\n      this.image.height\r\n    );\r\n  }\r\n}\r\n\r\nexport default SmallFish;\r\n","import angles from \"../constants/angles\";\r\nimport Character from \"./character\";\r\n\r\nclass Turtle extends Character {\r\n  static scientificName: string = \"Carretta carretta\";\r\n  protected _isMain: boolean = true;\r\n  protected _isPrey: boolean = false;\r\n  protected _isObstacle: boolean = false;\r\n  protected _imageFilename: string = \"turtle.png\";\r\n\r\n  private _angle: number;\r\n\r\n  private _bgStartX: number;\r\n  private _bgStartY: number;\r\n  private _limitY: number;\r\n  private static _step: number = 3;\r\n\r\n  protected _foodValue: number;\r\n  private _lifeValue: number;\r\n  private _oxygenValue: number;\r\n  protected _damage: number; \r\n\r\n  constructor() {\r\n    super();\r\n    this.resetPosition();\r\n    this._angle = angles.right;\r\n    this._bgStartX = 0;\r\n    this._bgStartY = 0;\r\n    this.resetFoodValue();\r\n    this.resetLifeValue();\r\n    this._oxygenValue = 100;\r\n  }\r\n\r\n  resetPosition() {\r\n    this._x = 50;\r\n    this._y = 10;\r\n  }\r\n\r\n  resetFoodValue() {\r\n    this._foodValue = 100;\r\n  }\r\n\r\n  resetLifeValue() {\r\n    this._lifeValue = 100;\r\n  }\r\n\r\n  increaseFoodValue(foodValue: number) {\r\n    this._foodValue += foodValue;\r\n  }\r\n\r\n  decreaseFoodValue() {\r\n    this._foodValue -= 0.01;\r\n  }\r\n\r\n  breath() {\r\n    this._oxygenValue += 0.5;\r\n  }\r\n\r\n  useOxygen() {\r\n    this._oxygenValue -= 0.001;\r\n  }\r\n\r\n  applyDamage(damage: number) {\r\n    this._lifeValue -= damage;\r\n  }\r\n\r\n  get lifeValue() {\r\n    return this._lifeValue;\r\n  }\r\n\r\n  get oxygenValue() {\r\n    return this._oxygenValue;\r\n  }\r\n\r\n  set bgStartX(x: number) {\r\n    this._bgStartX = x;\r\n  }\r\n\r\n  set bgStartY(y: number) {\r\n    this._bgStartY = y;\r\n  }\r\n\r\n  set limitY(y: number) {\r\n    this._limitY = y;\r\n  }\r\n\r\n  moveUp() {\r\n    if (this._y > 0) {\r\n      this._y -= Turtle._step;\r\n    }\r\n  }\r\n\r\n  moveDown() {\r\n    if (this._y < this._limitY) {\r\n      this._y += Turtle._step;\r\n    }\r\n  }\r\n\r\n  moveLeft() {\r\n    this.rotate(angles.left);\r\n    if (this._x > 0) {\r\n      this._x -= Turtle._step;\r\n    }\r\n  }\r\n\r\n  moveRight() {\r\n    this.rotate(angles.right);\r\n    this._x += Turtle._step;\r\n  }\r\n\r\n  private rotate(angle: number) {\r\n    this._angle = angle;\r\n  }\r\n\r\n  private applyRotation(context: CanvasRenderingContext2D) {\r\n    context.translate(this._x, this._y);\r\n    context.rotate(this._angle);\r\n    context.translate(-this._x, -this._y);\r\n  }\r\n\r\n  paint(context: CanvasRenderingContext2D) {\r\n    this.applyRotation(context);\r\n    context.drawImage(\r\n      this._image,\r\n      this._x - this._bgStartX,\r\n      this._y - this._bgStartY,\r\n      this._image.width,\r\n      this._image.height\r\n    );\r\n    context.resetTransform();\r\n  }\r\n}\r\n\r\nexport default Turtle;\r\n","const angles = {\r\n  right: 0,\r\n  left: Math.PI,\r\n};\r\n\r\nexport default angles;\r\n","import Turtle from \"../characters/turtle\";\r\nimport bindKeyboard from \"./keyboard\";\r\nimport bindOnscreenControls from \"./onscreen\";\r\nimport bindWheel from \"./touchpad\";\r\n\r\ninterface Options {\r\n  canvas: HTMLCanvasElement;\r\n  mainCharacter: Turtle;\r\n  upBtnId: string;\r\n  leftBtnId: string;\r\n  rightBtnId: string;\r\n  downBtnId: string;\r\n}\r\n\r\nfunction bindControls(options: Options) {\r\n  const {\r\n    canvas,\r\n    mainCharacter,\r\n    upBtnId,\r\n    leftBtnId,\r\n    rightBtnId,\r\n    downBtnId,\r\n  } = options;\r\n  bindKeyboard(canvas, mainCharacter);\r\n  bindWheel(canvas, mainCharacter);\r\n  bindOnscreenControls(mainCharacter, {\r\n    upBtnId,\r\n    leftBtnId,\r\n    rightBtnId,\r\n    downBtnId,\r\n  });\r\n}\r\n\r\nexport default bindControls;\r\n","import Turtle from \"../characters/turtle\";\r\n\r\nfunction handleKeyDown(event: KeyboardEvent, mainCharacter: Turtle) {\r\n  const upKeys = [\"w\", \"W\", \"ArrowUp\"];\r\n  const downKeys = [\"s\", \"S\", \"ArrowDown\"];\r\n  const leftKeys = [\"a\", \"A\", \"ArrowLeft\"];\r\n  const rightKeys = [\"d\", \"D\", \"ArrowRight\"];\r\n\r\n  if (upKeys.includes(event.key)) {\r\n    mainCharacter.moveUp();\r\n  }\r\n\r\n  if (downKeys.includes(event.key)) {\r\n    mainCharacter.moveDown();\r\n  }\r\n\r\n  if (leftKeys.includes(event.key)) {\r\n    mainCharacter.moveLeft();\r\n  }\r\n\r\n  if (rightKeys.includes(event.key)) {\r\n    mainCharacter.moveRight();\r\n  }\r\n}\r\n\r\nfunction bindKeyboard(canvas: HTMLCanvasElement, mainCharacter: Turtle) {\r\n  canvas.addEventListener(\"keydown\", (event) =>\r\n    handleKeyDown(event, mainCharacter)\r\n  );\r\n}\r\n\r\nexport default bindKeyboard;\r\n","import Turtle from \"../characters/turtle\";\r\n\r\ninterface Options {\r\n  upBtnId: string;\r\n  leftBtnId: string;\r\n  rightBtnId: string;\r\n  downBtnId: string;\r\n}\r\n\r\nlet timer = 0;\r\n\r\nfunction mousedown(mainCharacter: Turtle, callback: Function) {\r\n  callback();\r\n  timer = requestAnimationFrame(() => mousedown(mainCharacter, callback));\r\n}\r\n\r\nfunction mouseup() {\r\n  cancelAnimationFrame(timer);\r\n}\r\n\r\nfunction bindOnscreenControls(mainCharacter: Turtle, options: Options) {\r\n  const upBtn = document.getElementById(options.upBtnId) as HTMLButtonElement;\r\n  const leftBtn = document.getElementById(\r\n    options.leftBtnId\r\n  ) as HTMLButtonElement;\r\n  const rightBtn = document.getElementById(\r\n    options.rightBtnId\r\n  ) as HTMLButtonElement;\r\n  const downBtn = document.getElementById(\r\n    options.downBtnId\r\n  ) as HTMLButtonElement;\r\n\r\n  bindControl(mainCharacter, upBtn, () => mainCharacter.moveUp());\r\n  bindControl(mainCharacter, leftBtn, () => mainCharacter.moveLeft());\r\n  bindControl(mainCharacter, rightBtn, () => mainCharacter.moveRight());\r\n  bindControl(mainCharacter, downBtn, () => mainCharacter.moveDown());\r\n}\r\n\r\nfunction bindControl(\r\n  mainCharacter: Turtle,\r\n  btn: HTMLButtonElement,\r\n  callback: Function\r\n) {\r\n  btn.addEventListener(\"mousedown\", () => mousedown(mainCharacter, callback));\r\n  btn.addEventListener(\"mouseup\", mouseup);\r\n  btn.addEventListener(\"mouseleave\", mouseup);\r\n  btn.addEventListener(\"touchstart\", () => mousedown(mainCharacter, callback));\r\n  btn.addEventListener(\"touchend\", mouseup);\r\n}\r\n\r\nexport default bindOnscreenControls;\r\n","import Turtle from \"../characters/turtle\";\r\n\r\nfunction handleWheel(event: WheelEvent, mainCharacter: Turtle) {\r\n  event.preventDefault();\r\n  if (event.deltaX < 0) {\r\n    mainCharacter.moveLeft();\r\n  }\r\n  if (event.deltaX > 0) {\r\n    mainCharacter.moveRight();\r\n  }\r\n  if (event.deltaY < 0) {\r\n    mainCharacter.moveUp();\r\n  }\r\n  if (event.deltaY > 0) {\r\n    mainCharacter.moveDown();\r\n  }\r\n}\r\n\r\nfunction bindWheel(canvas: HTMLCanvasElement, mainCharacter: Turtle) {\r\n  canvas.addEventListener(\"wheel\", (event) =>\r\n    handleWheel(event, mainCharacter)\r\n  );\r\n}\r\n\r\nexport default bindWheel;\r\n","import ConfirmationDialogOptions from \"./options/confirmation-dialog-options\";\r\nimport CreditsDialogOptions from \"./options/credits-dialog-options\";\r\nimport DialogOptions from \"./options/dialog-options\";\r\nimport { DialogType } from \"./enums/dialog-type\";\r\nimport MenuDialogOptions from \"./options/menu-dialog-options\";\r\nimport PromptDialogOptions from \"./options/prompt-dialog-options\";\r\nimport PromptInput, { PromptSelect } from \"./options/prompt-input\";\r\nimport ChangelogDialogOptions from \"./options/changelog-dialog-options\";\r\n\r\nexport default class Dialog {\r\n  private static modal(type: DialogType, options: DialogOptions) {\r\n    if (!document.getElementById(options.id)) {\r\n      const modal = document.createElement(\"div\");\r\n      modal.tabIndex = 1;\r\n      modal.id = options.id;\r\n      modal.classList.add(\r\n        \"dialog\",\r\n        \"fixed\",\r\n        \"text-white\",\r\n        \"w-4/5\",\r\n        \"opacity-80\",\r\n        \"focus:opacity-95\",\r\n        \"bg-amber-500\",\r\n        \"dark:bg-gray-900\",\r\n        \"pt-5\",\r\n        \"pb-5\",\r\n        \"rounded-3xl\",\r\n        \"max-w-xl\"\r\n      );\r\n\r\n      if (options.title) {\r\n        const h1 = document.createElement(\"h1\");\r\n        h1.innerText = options.title;\r\n        h1.classList.add(\"text-center\", \"text-xl\");\r\n        modal.appendChild(h1);\r\n        modal.appendChild(document.createElement(\"hr\"));\r\n      }\r\n\r\n      const textContainer = document.createElement(\"div\");\r\n      this.appendText(options.text, textContainer);\r\n      modal.appendChild(textContainer);\r\n\r\n      switch (type) {\r\n        case DialogType.Confirmation: {\r\n          const o = options as ConfirmationDialogOptions;\r\n          const btnContainer = document.createElement(\"div\");\r\n          btnContainer.classList.add(\"w-fit\", \"m-auto\");\r\n          modal.appendChild(btnContainer);\r\n\r\n          this.appendBtn(\r\n            btnContainer,\r\n            \"Yes\",\r\n            () => {\r\n              o.yesCallback();\r\n              this.closeModal(modal);\r\n            },\r\n            false,\r\n            \"button\"\r\n          );\r\n          this.appendBtn(\r\n            btnContainer,\r\n            \"No\",\r\n            () => {\r\n              o.noCallback();\r\n              this.closeModal(modal);\r\n            },\r\n            true,\r\n            \"button\"\r\n          );\r\n          break;\r\n        }\r\n        case DialogType.Notification: {\r\n          this.appendOKButton(modal);\r\n          this.listenKeyboard(modal);\r\n          break;\r\n        }\r\n        case DialogType.Prompt: {\r\n          const o = options as PromptDialogOptions;\r\n          this.appendForm(modal, o);\r\n          break;\r\n        }\r\n        case DialogType.Credits: {\r\n          const o = options as CreditsDialogOptions;\r\n          this.appendCredits(textContainer, o);\r\n          this.appendOKButton(modal);\r\n          this.listenKeyboard(modal);\r\n          break;\r\n        }\r\n        case DialogType.Menu: {\r\n          const o = options as MenuDialogOptions;\r\n          this.appendMenu(modal, o);\r\n          this.appendOKButton(modal);\r\n          this.listenKeyboard(modal);\r\n          break;\r\n        }\r\n        case DialogType.Changelog: {\r\n          const o = options as ChangelogDialogOptions;\r\n          this.appendChangelog(modal, o);\r\n          this.appendOKButton(modal);\r\n          this.listenKeyboard(modal);\r\n          break;\r\n        }\r\n      }\r\n\r\n      document.body.appendChild(modal);\r\n    }\r\n  }\r\n\r\n  private static appendBtn(\r\n    container: HTMLDivElement | HTMLFormElement,\r\n    text: string,\r\n    callback: any,\r\n    isDanger: boolean,\r\n    btnType: \"submit\" | \"button\" | \"reset\"\r\n  ) {\r\n    const btn = document.createElement(\"button\");\r\n    btn.type = btnType;\r\n    btn.classList.add(\"rounded-3xl\", \"m-1\", \"cursor-pointer\");\r\n    this.assignButtonColor(btn, isDanger);\r\n    const span = document.createElement(\"span\");\r\n    span.classList.add(\"text-xl\", \"ml-2\", \"mr-2\");\r\n    span.innerText = text;\r\n    btn.appendChild(span);\r\n    if (btnType === \"button\") {\r\n      btn.addEventListener(\"click\", callback);\r\n    }\r\n    container.appendChild(btn);\r\n  }\r\n\r\n  private static appendForm(\r\n    modal: HTMLDivElement,\r\n    options: PromptDialogOptions\r\n  ) {\r\n    const inputContainer = document.createElement(\"div\") as HTMLDivElement;\r\n    inputContainer.classList.add(\"m-auto\", \"w-3/4\");\r\n    modal.appendChild(inputContainer);\r\n\r\n    const form = document.createElement(\"form\") as HTMLFormElement;\r\n    inputContainer.appendChild(form);\r\n    form.addEventListener(\"submit\", (event: SubmitEvent) => {\r\n      event.preventDefault();\r\n      if (options.onOK) {\r\n        options.onOK();\r\n      }\r\n      this.closeModal(modal);\r\n    });\r\n\r\n    this.appendInputs(form, options.inputs);\r\n    this.appendSelects(form, options.selects);\r\n\r\n    const btnContainer = document.createElement(\"div\") as HTMLDivElement;\r\n    btnContainer.classList.add(\"w-fit\", \"m-auto\");\r\n    form.appendChild(btnContainer);\r\n\r\n    this.appendBtn(btnContainer, \"OK\", null, false, \"submit\");\r\n    this.appendBtn(\r\n      btnContainer,\r\n      \"Cancel\",\r\n      () => {\r\n        if (options.onCancel) {\r\n          options.onCancel();\r\n        }\r\n        this.closeModal(modal);\r\n      },\r\n      true,\r\n      \"button\"\r\n    );\r\n  }\r\n\r\n  private static appendInputs(\r\n    form: HTMLFormElement,\r\n    inputs: Array<PromptInput>\r\n  ) {\r\n    for (const i of inputs) {\r\n      const input = document.createElement(\"input\");\r\n      input.type = i.type;\r\n      input.id = `dialog-input-${i.name}`;\r\n      input.name = `dialog-input-${i.name}`;\r\n      input.ariaPlaceholder = `Enter ${i.label}`;\r\n      input.placeholder = `Enter ${i.label}`;\r\n      input.maxLength = i.limit;\r\n      this.assignInputClassNames(input);\r\n      input.required = i.required;\r\n      input.ariaRequired = i.required.toString();\r\n      form.appendChild(input);\r\n\r\n      this.appendBrElement(form);\r\n      this.appendBrElement(form);\r\n    }\r\n  }\r\n\r\n  private static assignInputClassNames(input: HTMLElement) {\r\n    input.classList.add(\r\n      \"text-center\",\r\n      \"w-full\",\r\n      \"rounded-3xl\",\r\n      \"h-9\",\r\n      \"text-lg\",\r\n      \"text-gray-700\"\r\n    );\r\n  }\r\n\r\n  private static appendSelects(\r\n    form: HTMLFormElement,\r\n    selects: Array<PromptSelect>\r\n  ) {\r\n    for (const s of selects) {\r\n      const select = document.createElement(\"select\");\r\n      select.id = `dialog-select-${s.name}`;\r\n      select.name = `dialog-select-${s.name}`;\r\n      select.ariaPlaceholder = s.label;\r\n      this.assignInputClassNames(select);\r\n      select.required = s.required;\r\n      select.ariaRequired = s.required.toString();\r\n      form.appendChild(select);\r\n\r\n      for (const o of s.options) {\r\n        const option = document.createElement(\"option\");\r\n        option.innerText = o.text;\r\n        option.value = o.value;\r\n        if (s.default === parseInt(o.value)) {\r\n          option.selected = true;\r\n          option.ariaSelected = \"true\";\r\n        }\r\n        select.appendChild(option);\r\n      }\r\n\r\n      const handleChange = s.onChange;\r\n      if (handleChange) {\r\n        handleChange(select.selectedOptions[0].value);\r\n        select.addEventListener(\"change\", () =>\r\n          handleChange(select.selectedOptions[0].value)\r\n        );\r\n      }\r\n\r\n      this.appendBrElement(form);\r\n      this.appendBrElement(form);\r\n    }\r\n  }\r\n\r\n  private static appendBrElement(container: HTMLDivElement | HTMLFormElement) {\r\n    const br = document.createElement(\"br\");\r\n    container.appendChild(br);\r\n  }\r\n\r\n  private static appendText(\r\n    text: Array<string> | undefined,\r\n    container: HTMLDivElement\r\n  ) {\r\n    this.assignTextClassNames(container);\r\n    if (text) {\r\n      for (const t of text) {\r\n        const p = document.createElement(\"p\");\r\n        p.innerText = t;\r\n        container.appendChild(p);\r\n      }\r\n    }\r\n  }\r\n\r\n  private static appendCredits(\r\n    container: HTMLDivElement,\r\n    options: CreditsDialogOptions\r\n  ) {\r\n    for (const section of options.sections) {\r\n      const h2 = document.createElement(\"h2\");\r\n      h2.classList.add(\"text-xl\");\r\n      h2.innerText = section.title;\r\n      container.appendChild(h2);\r\n      const ul = document.createElement(\"ul\");\r\n      ul.classList.add(\"ml-5\");\r\n      for (const contributor of section.contributors) {\r\n        const li = document.createElement(\"li\");\r\n        li.innerText = contributor;\r\n        ul.appendChild(li);\r\n      }\r\n      container.appendChild(ul);\r\n    }\r\n  }\r\n\r\n  private static appendOKButton(modal: HTMLDivElement) {\r\n    const btnContainer = document.createElement(\"div\") as HTMLDivElement;\r\n    btnContainer.classList.add(\"w-fit\", \"m-auto\");\r\n    modal.appendChild(btnContainer);\r\n\r\n    this.appendBtn(\r\n      btnContainer,\r\n      \"OK\",\r\n      () => this.closeModal(modal),\r\n      false,\r\n      \"button\"\r\n    );\r\n  }\r\n\r\n  private static listenKeyboard(modal: HTMLDivElement) {\r\n    modal.addEventListener(\"keydown\", (event: KeyboardEvent) => {\r\n      if (event.key === \"Escape\" || event.key === \"Enter\") {\r\n        this.closeModal(modal);\r\n      }\r\n    });\r\n  }\r\n\r\n  private static appendMenu(modal: HTMLDivElement, options: MenuDialogOptions) {\r\n    const container = document.createElement(\"div\");\r\n    container.classList.add(\"w-1/3\", \"m-auto\");\r\n    modal.appendChild(container);\r\n    for (const b of options.buttons) {\r\n      const button = document.createElement(\"button\");\r\n      button.type = \"button\";\r\n      button.innerText = b.text;\r\n      button.classList.add(\"w-full\", \"h-12\", \"rounded-3xl\", \"mt-3\", \"mb-3\");\r\n      this.assignButtonColor(button, b.isDanger);\r\n      button.addEventListener(\"click\", b.callback);\r\n      container.appendChild(button);\r\n    }\r\n  }\r\n\r\n  private static appendChangelog(\r\n    modal: HTMLDivElement,\r\n    options: ChangelogDialogOptions\r\n  ) {\r\n    const container = document.createElement(\"div\");\r\n    this.assignTextClassNames(container);\r\n    modal.appendChild(container);\r\n    for (const release of options.releases) {\r\n      const h2 = document.createElement(\"h2\");\r\n      h2.classList.add(\"text-xl\");\r\n      h2.innerText = `${release.version} (${release.status} release - ${release.dateTime})`;\r\n      container.appendChild(h2);\r\n      const ul = document.createElement(\"ul\");\r\n      ul.classList.add(\"ml-5\");\r\n      container.appendChild(ul);\r\n      for (const point of release.points) {\r\n        const outerLi = document.createElement(\"li\");\r\n        outerLi.innerText = point.text;\r\n        ul.appendChild(outerLi);\r\n        if (point.subPoints && point.subPoints.length > 0) {\r\n          const ol = document.createElement(\"ol\");\r\n          ol.classList.add(\"list-decimal\", \"ml-5\");\r\n          outerLi.appendChild(ol);\r\n          for (const subPoint of point.subPoints) {\r\n            const innerLi = document.createElement(\"li\");\r\n            innerLi.innerText = subPoint;\r\n            ol.appendChild(innerLi);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private static assignTextClassNames(container: HTMLDivElement) {\r\n    container.classList.add(\r\n      \"w-11/12\",\r\n      \"m-auto\",\r\n      \"mt-3\",\r\n      \"mb-3\",\r\n      \"grid\",\r\n      \"gap-3\",\r\n      \"max-h-screen-1/4\",\r\n      \"overflow-y-auto\"\r\n    );\r\n  }\r\n\r\n  private static assignButtonColor(\r\n    button: HTMLButtonElement,\r\n    isDanger: boolean\r\n  ) {\r\n    if (isDanger) {\r\n      button.classList.add(\"bg-red-600\");\r\n    } else {\r\n      button.classList.add(\"bg-theme-color\", \"dark:bg-dark-theme-color\");\r\n    }\r\n  }\r\n\r\n  private static closeModal(modal: HTMLDivElement) {\r\n    if (document.body.contains(modal)) {\r\n      document.body.removeChild(modal);\r\n    }\r\n  }\r\n\r\n  public static confirm = (options: ConfirmationDialogOptions) =>\r\n    Dialog.modal(DialogType.Confirmation, options);\r\n  public static notify = (options: DialogOptions) =>\r\n    Dialog.modal(DialogType.Notification, options);\r\n  public static prompt = (options: PromptDialogOptions) =>\r\n    Dialog.modal(DialogType.Prompt, options);\r\n  public static credit = (options: CreditsDialogOptions) =>\r\n    Dialog.modal(DialogType.Credits, options);\r\n  public static menu = (options: MenuDialogOptions) =>\r\n    Dialog.modal(DialogType.Menu, options);\r\n  public static changelog = (options: ChangelogDialogOptions) =>\r\n    Dialog.modal(DialogType.Changelog, options);\r\n\r\n  public static closeAllOpenDialogs() {\r\n    const dialogs = document.getElementsByClassName(\r\n      \"dialog\"\r\n    ) as HTMLCollectionOf<HTMLDivElement>;\r\n    for (let i: number = 0; i < dialogs.length; i++) {\r\n      this.closeModal(dialogs[i]);\r\n    }\r\n  }\r\n}\r\n","export enum DialogType {\r\n  Confirmation = 0,\r\n  Notification = 1,\r\n  Prompt = 2,\r\n  Credits = 3,\r\n  Menu = 4,\r\n  Changelog = 5,\r\n}\r\n","import Level from \"./level\";\r\nimport levels from \"./levels\";\r\n\r\nfunction selectLvl(currentLevel: number): Level {\r\n  if (currentLevel <= levels.length) {\r\n    return levels[currentLevel - 1];\r\n  } else {\r\n    throw new Error(`Level ${currentLevel} not implemented`);\r\n  }\r\n}\r\n\r\nexport default selectLvl;\r\n","import ICharacter from \"../characters/icharacter\";\r\nimport ILevel from \"./ilevel\";\r\n\r\nabstract class Level implements ILevel {\r\n  protected abstract _backgroundImagePath: string;\r\n  protected _backgroundImage: HTMLImageElement;\r\n  protected abstract _characters: Set<ICharacter>;\r\n  protected _bgOffsetX: number;\r\n  protected _bgOffsetY: number;\r\n\r\n  async init(): Promise<HTMLImageElement> {\r\n    try {\r\n      await this.loadBgImg();\r\n      await this.loadCharacters();\r\n      this.setInitialCharacterPositions();\r\n      return this._backgroundImage;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  private loadBgImg(): Promise<HTMLImageElement> {\r\n    return new Promise((resolve, reject) => {\r\n      const backgroundImage = document.createElement(\"img\");\r\n      backgroundImage.src = this._backgroundImagePath;\r\n      backgroundImage.onload = () => {\r\n        this._backgroundImage = backgroundImage;\r\n        resolve(backgroundImage);\r\n      };\r\n      backgroundImage.onerror = () =>\r\n        reject(new Error(\"Could not load level background\"));\r\n    });\r\n  }\r\n\r\n  set bgOffsetX(offsetX: number) {\r\n    this._bgOffsetX = offsetX;\r\n  }\r\n\r\n  set bgOffsetY(offsetY: number) {\r\n    this._bgOffsetY = offsetY;\r\n  }\r\n\r\n  get bgImgPath() {\r\n    return this._backgroundImagePath;\r\n  }\r\n\r\n  get bgImg() {\r\n    return this._backgroundImage;\r\n  }\r\n\r\n  get characters() {\r\n    return this._characters;\r\n  }\r\n\r\n  private setInitialCharacterPositions(): void {\r\n    for (const character of this._characters) {\r\n      character.x = Math.random() * this._backgroundImage.width;\r\n      character.y = Math.random() * this._backgroundImage.height;\r\n    }\r\n  }\r\n\r\n  private async loadCharacters(): Promise<void> {\r\n    for (const character of this.characters) {\r\n      await character.loadImage();\r\n    }\r\n  }\r\n\r\n  paintCharacters(context: CanvasRenderingContext2D): void {\r\n    try {\r\n      for (const character of this.characters) {\r\n        character.paint(context, this._bgOffsetX, this._bgOffsetY);\r\n      }\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Level;\r\n","import ICharacter from \"../characters/icharacter\";\r\nimport PlasticBag from \"../characters/plastic-bag\";\r\nimport Shrimp from \"../characters/shrimp\";\r\nimport SmallFish from \"../characters/small-fish\";\r\nimport Level from \"./level\";\r\n\r\nclass Level1 extends Level {\r\n  protected _backgroundImagePath: string = \"./images/bg-lvl1.png\";\r\n  protected _characters: Set<ICharacter> = new Set([\r\n    new Shrimp(),\r\n    new Shrimp(),\r\n    new Shrimp(),\r\n    new Shrimp(),\r\n    new Shrimp(),\r\n    new Shrimp(),\r\n    new Shrimp(),\r\n    new SmallFish(),\r\n    new SmallFish(),\r\n    new PlasticBag(),\r\n    new PlasticBag(),\r\n    new PlasticBag(),\r\n    new PlasticBag(),\r\n  ]);\r\n}\r\n\r\nexport default Level1;\r\n","import ICharacter from \"../characters/icharacter\";\r\nimport PlasticBag from \"../characters/plastic-bag\";\r\nimport Level from \"./level\";\r\n\r\nclass Level2 extends Level {\r\n  protected _backgroundImagePath: string = \"./images/bg-demo-black.png\";\r\n  protected _characters: Set<ICharacter> = new Set([\r\n    new PlasticBag(),\r\n    new PlasticBag(),\r\n    new PlasticBag(),\r\n    new PlasticBag(),\r\n    new PlasticBag(),\r\n    new PlasticBag(),\r\n    new PlasticBag(),\r\n    new PlasticBag(),\r\n    new PlasticBag(),\r\n    new PlasticBag(),\r\n    new PlasticBag(),\r\n    new PlasticBag(),\r\n    new PlasticBag(),\r\n    new PlasticBag(),\r\n    new PlasticBag(),\r\n    new PlasticBag(),\r\n    new PlasticBag(),\r\n    new PlasticBag(),\r\n  ]);\r\n}\r\n\r\nexport default Level2;\r\n","import Level1 from \"./level1\";\r\nimport Level2 from \"./level2\";\r\n\r\nexport enum LevelChangeTypes {\r\n  GameOver = 0,\r\n  NewLevel = 1,\r\n  SameLevel = 2,\r\n  GameComplete = 3,\r\n}\r\n\r\nconst levels = [new Level1(), new Level2()];\r\n\r\nexport default levels;\r\n","import ICharacter from \"./characters/icharacter\";\r\nimport Turtle from \"./characters/turtle\";\r\nimport Dialog from \"./dialog/dialog\";\r\nimport ILevel from \"./levels/ilevel\";\r\nimport levels, { LevelChangeTypes } from \"./levels/levels\";\r\n\r\ninterface Options {\r\n  bgWidth: number;\r\n  levelNo: number;\r\n  level: ILevel;\r\n}\r\n\r\ninterface ReturnValue {\r\n  levelChangeType: LevelChangeTypes;\r\n  newLevel?: number;\r\n}\r\n\r\nfunction checkTurtle(mainCharacter: Turtle, options: Options): ReturnValue {\r\n  mainCharacter.decreaseFoodValue();\r\n  \r\n  if (mainCharacter.foodValue <= 0 || mainCharacter.oxygenValue <= 0 || mainCharacter.lifeValue <= 0) {\r\n    return { levelChangeType: LevelChangeTypes.GameOver };\r\n  }\r\n\r\n  if (mainCharacter.y <= 0) {\r\n    mainCharacter.breath();\r\n  } else {\r\n    mainCharacter.useOxygen();\r\n  }\r\n\r\n  if (mainCharacter.x >= options.bgWidth) {\r\n    return handleOffBgWidth(mainCharacter, options);\r\n  }\r\n\r\n  checkIfTurtleMeetsCharacters(mainCharacter, options.level);\r\n\r\n  return { levelChangeType: LevelChangeTypes.SameLevel };\r\n}\r\n\r\nfunction handleOffBgWidth(\r\n  mainCharacter: Turtle,\r\n  options: Options\r\n): ReturnValue {\r\n  options.levelNo++;\r\n  mainCharacter.resetPosition();\r\n  if (options.levelNo <= levels.length) {\r\n    Dialog.notify({\r\n      id: \"new-level\",\r\n      title: \"New Level\",\r\n      text: [`Welcome to level ${options.levelNo}`],\r\n    });\r\n    return {\r\n      levelChangeType: LevelChangeTypes.NewLevel,\r\n      newLevel: options.levelNo,\r\n    };\r\n  } else {\r\n    return { levelChangeType: LevelChangeTypes.GameComplete };\r\n  }\r\n}\r\n\r\nfunction checkIfTurtleMeetsCharacters(mainCharacter: Turtle, level: ILevel) {\r\n  for (const character of level.characters) {\r\n    if (areTurtleCharacterIntersecting(mainCharacter, character)) {\r\n      if (character.isPrey) {\r\n        mainCharacter.increaseFoodValue(character.foodValue);\r\n        level.characters.delete(character);\r\n      } else if (character.isObstacle) {\r\n        mainCharacter.applyDamage(character.damage);\r\n        level.characters.delete(character);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction areTurtleCharacterIntersecting(\r\n  turtle: Turtle,\r\n  otherCharacter: ICharacter\r\n): boolean {\r\n  const turtleXEnd = turtle.x + turtle.image.width;\r\n  const turtleYEnd = turtle.y + turtle.image.height;\r\n  return (\r\n    turtle.x <= otherCharacter.x &&\r\n    otherCharacter.x <= turtleXEnd &&\r\n    turtle.y <= otherCharacter.y &&\r\n    otherCharacter.y <= turtleYEnd\r\n  );\r\n}\r\n\r\nexport default checkTurtle;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import Turtle from \"./characters/turtle\";\r\nimport { version } from \"../package.json\";\r\nimport bindControls from \"./controls/controls\";\r\nimport checkTurtle from \"./turtle-observer\";\r\nimport selectLvl from \"./levels/level-selector\";\r\nimport Dialog from \"./dialog/dialog\";\r\nimport Background from \"./background\";\r\nimport Level1 from \"./levels/level1\";\r\nimport Level from \"./levels/level\";\r\nimport { LevelChangeTypes } from \"./levels/levels\";\r\n\r\n(async () => {\r\n  const canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\r\n  const context = canvas.getContext(\"2d\");\r\n  const turtle = new Turtle();\r\n  await turtle.loadImage();\r\n\r\n  let currentLevel: number = 1;\r\n\r\n  bindControls({\r\n    canvas,\r\n    mainCharacter: turtle,\r\n    upBtnId: \"upBtn\",\r\n    leftBtnId: \"leftBtn\",\r\n    rightBtnId: \"rightBtn\",\r\n    downBtnId: \"downBtn\",\r\n  });\r\n\r\n  let level: Level = new Level1();\r\n  let background = await loadLevel();\r\n\r\n  Background.readjustCanvasForBg(canvas, background);\r\n\r\n  async function loadLevel(): Promise<HTMLImageElement> {\r\n    try {\r\n      const background = await level.init();\r\n      turtle.limitY = background.height;\r\n      return background;\r\n    } catch (error) {\r\n      Dialog.notify({\r\n        id: \"game-error\",\r\n        title: \"Error\",\r\n        text: [error],\r\n      });\r\n    }\r\n  }\r\n\r\n  async function render() {\r\n    try {\r\n      const { levelChangeType, newLevel } = checkTurtle(turtle, {\r\n        bgWidth: background.width,\r\n        levelNo: currentLevel,\r\n        level,\r\n      });\r\n      if (\r\n        levelChangeType === LevelChangeTypes.SameLevel ||\r\n        levelChangeType === LevelChangeTypes.NewLevel\r\n      ) {\r\n        if (levelChangeType === LevelChangeTypes.NewLevel) {\r\n          currentLevel = newLevel;\r\n          level = selectLvl(currentLevel);\r\n          background = await loadLevel();\r\n        }\r\n\r\n        Background.paint(background, {\r\n          canvas,\r\n          context,\r\n          mainCharacter: turtle,\r\n          level,\r\n        });\r\n\r\n        turtle.paint(context);\r\n\r\n        level.paintCharacters(context);\r\n\r\n        updateMeters();\r\n\r\n        requestAnimationFrame(render);\r\n      } else if (levelChangeType === LevelChangeTypes.GameComplete) {\r\n        Dialog.notify({\r\n          id: \"game-over-dialog\",\r\n          title: \"Game complete\",\r\n          text: [\"Game complete. Congratulations!\"],\r\n        });\r\n      } else {\r\n        Dialog.notify({\r\n          id: \"game-over-dialog\",\r\n          title: \"You lose\",\r\n          text: [\"Better luck next time!\"],\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Dialog.notify({\r\n        id: \"game-error\",\r\n        title: \"Error\",\r\n        text: [error],\r\n      });\r\n    }\r\n  }\r\n\r\n  function resizeCanvas() {\r\n    canvas.height = window.innerHeight;\r\n    canvas.width = window.innerWidth;\r\n    Background.readjustCanvasForBg(canvas, background);\r\n  }\r\n\r\n  function updateMeters() {\r\n    const foodMeter = document.getElementById(\"foodMeter\") as HTMLMeterElement;\r\n    foodMeter.value = turtle.foodValue;\r\n\r\n    const lifeMeter = document.getElementById(\"lifeMeter\") as HTMLMeterElement;\r\n    lifeMeter.value = turtle.lifeValue;\r\n\r\n    const oxygenMeter = document.getElementById(\"oxygenMeter\") as HTMLMeterElement;\r\n    oxygenMeter.value = turtle.oxygenValue;\r\n  }\r\n\r\n  window.addEventListener(\"resize\", resizeCanvas);\r\n  resizeCanvas();\r\n\r\n  const versionAnchor = document.getElementById(\"version\");\r\n  versionAnchor.innerText = version;\r\n\r\n  canvas.focus();\r\n  await render();\r\n\r\n  Dialog.notify({\r\n    id: \"dialog-game-welcome\",\r\n    title: \"Welcome\",\r\n    text: [\"Welcome to Turtle Escape!\"],\r\n  });\r\n\r\n  //@ts-ignore\r\n  //await screen.orientation.lock(\"landscape-primary\");\r\n})();\r\n"],"names":["Background","paint","backgroundImage","options","horizontalSegments","calculateScreenCutOffPoints","width","canvas","verticalSegments","height","x","mainCharacter","Math","floor","y","context","drawImage","updateBgRelatedProperties","bgSize","canvasSize","points","noOfFits","i","push","readjustCanvasForBg","bgImg","bgStartX","bgStartY","level","bgOffsetX","bgOffsetY","_baseImagePath","loadImage","Promise","resolve","reject","image","document","createElement","src","this","_imageFilename","onload","_image","onerror","Error","_x","_y","isMain","_isMain","isPrey","_isPrey","isObstacle","_isObstacle","foodValue","_foodValue","damage","_damage","PlasticBag","bgXOffset","bgYOffset","Shrimp","SmallFish","Turtle","constructor","super","resetPosition","_angle","right","_bgStartX","_bgStartY","resetFoodValue","resetLifeValue","_oxygenValue","_lifeValue","increaseFoodValue","decreaseFoodValue","breath","useOxygen","applyDamage","lifeValue","oxygenValue","limitY","_limitY","moveUp","_step","moveDown","moveLeft","rotate","left","moveRight","angle","applyRotation","translate","resetTransform","scientificName","angles","PI","upBtnId","leftBtnId","rightBtnId","downBtnId","addEventListener","event","includes","key","handleKeyDown","timer","mousedown","callback","requestAnimationFrame","mouseup","cancelAnimationFrame","bindControl","btn","upBtn","getElementById","leftBtn","rightBtn","downBtn","preventDefault","deltaX","deltaY","handleWheel","Dialog","modal","type","id","tabIndex","classList","add","title","h1","innerText","appendChild","textContainer","appendText","text","DialogType","Confirmation","o","btnContainer","appendBtn","yesCallback","closeModal","noCallback","Notification","appendOKButton","listenKeyboard","Prompt","appendForm","Credits","appendCredits","Menu","appendMenu","Changelog","appendChangelog","body","container","isDanger","btnType","assignButtonColor","span","inputContainer","form","onOK","appendInputs","inputs","appendSelects","selects","onCancel","input","name","ariaPlaceholder","label","placeholder","maxLength","limit","assignInputClassNames","required","ariaRequired","toString","appendBrElement","s","select","option","value","default","parseInt","selected","ariaSelected","handleChange","onChange","selectedOptions","br","assignTextClassNames","t","p","section","sections","h2","ul","contributor","contributors","li","b","buttons","button","release","releases","version","status","dateTime","point","outerLi","subPoints","length","ol","subPoint","innerLi","contains","removeChild","closeAllOpenDialogs","dialogs","getElementsByClassName","confirm","notify","prompt","credit","menu","changelog","currentLevel","init","loadBgImg","loadCharacters","setInitialCharacterPositions","_backgroundImage","error","_backgroundImagePath","offsetX","_bgOffsetX","offsetY","_bgOffsetY","bgImgPath","characters","_characters","character","random","paintCharacters","Level1","Set","Level2","LevelChangeTypes","levels","areTurtleCharacterIntersecting","turtle","otherCharacter","turtleXEnd","turtleYEnd","levelChangeType","GameOver","bgWidth","levelNo","NewLevel","newLevel","GameComplete","handleOffBgWidth","delete","checkIfTurtleMeetsCharacters","SameLevel","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","getContext","background","loadLevel","async","resizeCanvas","window","innerHeight","innerWidth","focus","render"],"sourceRoot":""}